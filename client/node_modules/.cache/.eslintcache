[{"D:\\tving\\client\\src\\index.tsx":"1","D:\\tving\\client\\src\\App.tsx":"2","D:\\tving\\client\\src\\pages\\Login.tsx":"3","D:\\tving\\client\\src\\pages\\NotFound.jsx":"4","D:\\tving\\client\\src\\pages\\Tving.tsx":"5","D:\\tving\\client\\src\\pages\\Details.jsx":"6","D:\\tving\\client\\src\\layout\\Layout.tsx":"7","D:\\tving\\client\\src\\layout\\Header.tsx":"8","D:\\tving\\client\\src\\services\\account.js":"9","D:\\tving\\client\\src\\services\\movie.js":"10","D:\\tving\\client\\src\\services\\tv.js":"11","D:\\tving\\client\\src\\services\\search.js":"12","D:\\tving\\client\\src\\components\\ColorButton.tsx":"13","D:\\tving\\client\\src\\components\\Modal.tsx":"14","D:\\tving\\client\\src\\components\\BaseInput.tsx":"15","D:\\tving\\client\\src\\components\\Img.tsx":"16","D:\\tving\\client\\src\\components\\CheckBox.jsx":"17","D:\\tving\\client\\src\\components\\Search.jsx":"18","D:\\tving\\client\\src\\components\\Carousel.tsx":"19","D:\\tving\\client\\src\\components\\Favorate.jsx":"20","D:\\tving\\client\\src\\atoms\\index.ts":"21","D:\\tving\\client\\src\\styled\\style.tsx":"22","D:\\tving\\client\\src\\utill\\Portal.jsx":"23","D:\\tving\\client\\src\\utill\\axios.ts":"24"},{"size":436,"mtime":1660998979693,"results":"25","hashOfConfig":"26"},{"size":1251,"mtime":1661002853596,"results":"27","hashOfConfig":"26"},{"size":6099,"mtime":1660998979562,"results":"28","hashOfConfig":"26"},{"size":255,"mtime":1660998979564,"results":"29","hashOfConfig":"26"},{"size":19492,"mtime":1661007025745,"results":"30","hashOfConfig":"26"},{"size":2822,"mtime":1660998979550,"results":"31","hashOfConfig":"26"},{"size":2494,"mtime":1660998979538,"results":"32","hashOfConfig":"26"},{"size":877,"mtime":1660998979514,"results":"33","hashOfConfig":"26"},{"size":213,"mtime":1660998979643,"results":"34","hashOfConfig":"26"},{"size":387,"mtime":1660998979644,"results":"35","hashOfConfig":"26"},{"size":373,"mtime":1660998979647,"results":"36","hashOfConfig":"26"},{"size":269,"mtime":1660998979646,"results":"37","hashOfConfig":"26"},{"size":225,"mtime":1660998979476,"results":"38","hashOfConfig":"26"},{"size":2007,"mtime":1660998979492,"results":"39","hashOfConfig":"26"},{"size":338,"mtime":1660998979462,"results":"40","hashOfConfig":"26"},{"size":1242,"mtime":1660998979479,"results":"41","hashOfConfig":"26"},{"size":208,"mtime":1660998979474,"results":"42","hashOfConfig":"26"},{"size":1123,"mtime":1660998979493,"results":"43","hashOfConfig":"26"},{"size":3438,"mtime":1660998979473,"results":"44","hashOfConfig":"26"},{"size":949,"mtime":1660998979477,"results":"45","hashOfConfig":"26"},{"size":1639,"mtime":1660998979460,"results":"46","hashOfConfig":"26"},{"size":1159,"mtime":1660998979674,"results":"47","hashOfConfig":"26"},{"size":213,"mtime":1660998979681,"results":"48","hashOfConfig":"26"},{"size":1368,"mtime":1661006218212,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"12lirvh",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"53"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"53"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"53"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"53"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"53"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"53"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\tving\\client\\src\\index.tsx",[],[],[],"D:\\tving\\client\\src\\App.tsx",["139","140","141","142","143","144","145","146","147","148"],[],"import React, { useEffect } from 'react';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport Start from 'pages/Login';\r\nimport Layout from 'layout/Layout';\r\n\r\nimport Details from 'pages/Details';\r\nimport Tving from 'pages/Tving';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport NotFound from 'pages/NotFound';\r\nimport { modalFlagState, countState, userIdState, headerState } from './atoms';\r\n\r\nimport {\r\n  useRecoilState,\r\n  useRecoilValue,\r\n  useSetRecoilState,\r\n  useResetRecoilState,\r\n} from 'recoil';\r\nimport 'styled/init.module.css';\r\n// import 'styled/App.css';\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <>\r\n            <Route path=\"/\" element={<Start />}></Route>\r\n            <Route path=\"/main\" element={<Layout />}>\r\n              <Route path=\"\" element={<Tving />}></Route>\r\n              <Route path=\":type/:id\" element={<Details />}></Route>\r\n            </Route>\r\n            <Route path=\"/main\" element={<Layout />}>\r\n              <Route path=\"tving\" element={<Tving />}></Route>\r\n            </Route>\r\n            <Route path=\"*\" element={<NotFound />}></Route>\r\n          </>\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n","D:\\tving\\client\\src\\pages\\Login.tsx",["149","150","151","152","153","154","155","156","157"],[],"import React, { useEffect, useState, useMemo, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getLogin } from 'services/account';\r\nimport Modal from 'components/Modal';\r\nimport styles from 'styled/Login.module.css';\r\nimport ColorButton from 'components/ColorButton';\r\nimport BaseInput from 'components/BaseInput';\r\nimport { useRecoilState } from 'recoil';\r\nimport { modalFlagState, userIdState, currentTargetState } from '../atoms';\r\n\r\nexport default function Login() {\r\n  const location = useNavigate();\r\n  const [modalFlag, setModalFlagState] =\r\n    useRecoilState<boolean>(modalFlagState);\r\n\r\n  const [currentTarget, setCurrentTarget] =\r\n    useRecoilState<any>(currentTargetState);\r\n  const [userId, setUserId] = useRecoilState(userIdState);\r\n  const inputClick = (e: React.MouseEvent) => {\r\n    setCurrentTarget(e.currentTarget as HTMLInputElement);\r\n  };\r\n  const showModal = () => {\r\n    if (!id && !password) {\r\n      setWarnMsg(`아이디를 입력해주세요!`);\r\n    }\r\n    setModalFlagState(true);\r\n  };\r\n  const idReg: RegExp = /^[a-z]+[a-z0-9]{5,19}$/g;\r\n  const passwordReg: RegExp = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\r\n  const [id, setId] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const currentTargetId = useRef<HTMLInputElement>(null);\r\n  const currentTargetPassword = useRef<HTMLInputElement>(null);\r\n  const [warnMsgConfig, setWarnMsgConfig] = useState<{\r\n    id: {\r\n      string: string;\r\n      value: string;\r\n      reg: boolean;\r\n    };\r\n    password: {\r\n      string: string;\r\n      value: string;\r\n      reg: boolean;\r\n    };\r\n  }>({\r\n    id: { string: '아이디', value: id, reg: true },\r\n    password: { string: '비밀번호', value: password, reg: true },\r\n  });\r\n  const [warnMsg, setWarnMsg] = useState<string | null>(null);\r\n  const insertId = (e: React.ChangeEvent) => {\r\n    let value =\r\n      typeof e === 'object' ? (e.target as HTMLInputElement).value : e;\r\n    setId(value);\r\n  };\r\n  const insertPassword = (e: React.ChangeEvent) => {\r\n    let value =\r\n      typeof e === 'object' ? (e.target as HTMLInputElement).value : e;\r\n    setPassword(value);\r\n  };\r\n\r\n  const checkId = useMemo(() => {\r\n    setWarnMsgConfig({\r\n      ...warnMsgConfig,\r\n      id: { ...warnMsgConfig.id, value: id, reg: idReg.test(id) },\r\n    });\r\n  }, [id]);\r\n  const checkPassword = useMemo(() => {\r\n    setWarnMsgConfig({\r\n      ...warnMsgConfig,\r\n      password: {\r\n        ...warnMsgConfig.password,\r\n        value: password,\r\n        reg: passwordReg.test(password),\r\n      },\r\n    });\r\n  }, [password]);\r\n  useEffect(() => {\r\n    const obj = Object.entries(warnMsgConfig);\r\n    for (let i = 0; i < obj.length; i++) {\r\n      let [key, objValue] = obj[i];\r\n      if (!objValue.value) {\r\n        setWarnMsg(`${objValue.string}을 입력해주세요!`);\r\n        return;\r\n      } else if (!objValue.reg) {\r\n        setWarnMsg(`${objValue.string} 형식이 올바르지 않습니다.`);\r\n        return;\r\n      }\r\n      setWarnMsg('');\r\n    }\r\n  }, [id, password]);\r\n\r\n  useEffect(() => {\r\n    setWarnMsg(null);\r\n  }, []);\r\n  const login = async () => {\r\n    if (!id && !password) {\r\n      setWarnMsg('아이디을 입력해주세요!');\r\n    }\r\n    const response = await getLogin();\r\n    console.log(response);\r\n\r\n    location('/main/tving');\r\n    sessionStorage.setItem('userInfo', id);\r\n  };\r\n  // const counterHandler = useSetRecoilState(countState); // 값만 변경 시키기\r\n  // const resetCounter = useResetRecoilState(countState); // 디폴트값으로 값 변경\r\n\r\n  // const [counter, setCoounter] = useRecoilState(countState);\r\n  // const currentCount = useRecoilValue(countState); // 읽기 전용!\r\n  // const counterHandler = useSetRecoilState(countState); // 값만 변경 시키기\r\n  // const resetCounter = useResetRecoilState(countState); // 디폴트값으로 값 변경\r\n  // const plusCount = () => {\r\n  //   counterHandler(pre => pre + 1);\r\n  // };\r\n  // const minusCount = () => {\r\n  //   counterHandler(pre => pre - 1);\r\n  // };\r\n  return (\r\n    <>\r\n      <Modal\r\n        warnMsg={warnMsg}\r\n        button={[\r\n          {\r\n            text: '확인',\r\n            backgroundColor: 'blue',\r\n            color: '#fff',\r\n          },\r\n          { text: '취소', backgroundColor: 'lightGray', color: '#000' },\r\n        ]}\r\n      ></Modal>\r\n      {/* <button onClick={() => setCounter((num) => num + 1)}>+</button>\r\n      <button onClick={() => setCounter((num) => num - 1)}>-</button> */}\r\n      {/* <button onClick={plusCount}>+</button>\r\n      <button onClick={minusCount}>-</button>\r\n      <button onClick={resetCounter}>reset</button>\r\n      <button\r\n        onClick={() => {\r\n          location('/tving');\r\n        }}\r\n      >\r\n        tt\r\n      </button> */}\r\n      {/* </> */}\r\n      <div className={styles.wrap}>\r\n        로그인\r\n        <div className={styles.input_wrap}>\r\n          <div>\r\n            <BaseInput\r\n              type=\"text\"\r\n              value={id}\r\n              onClick={inputClick}\r\n              onChange={insertId}\r\n              ref={currentTargetId}\r\n            />\r\n            {currentTarget === currentTargetId.current && currentTarget ? (\r\n              <button onClick={() => setId('')}>x</button>\r\n            ) : null}\r\n          </div>\r\n          <div>\r\n            <BaseInput\r\n              type=\"text\"\r\n              value={password}\r\n              onClick={inputClick}\r\n              onChange={insertPassword}\r\n              ref={currentTargetPassword}\r\n            />\r\n            {currentTarget === currentTargetPassword.current &&\r\n            currentTarget ? (\r\n              <button onClick={() => setPassword('')}>x</button>\r\n            ) : null}\r\n          </div>\r\n          <div>{warnMsg}</div>\r\n          <ColorButton\r\n            onClick={() =>\r\n              warnMsg || id === '' || password === '' ? showModal() : login()\r\n            }\r\n            backgroundColor={'red'}\r\n            color={'yellow'}\r\n          >\r\n            로그인\r\n          </ColorButton>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\tving\\client\\src\\pages\\NotFound.jsx",["158","159","160","161","162"],[],"import React, { Component, useEffect, useState, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <>\r\n      <div>해당페이지는 없습니다.</div>\r\n    </>\r\n  );\r\n}\r\n",[],"D:\\tving\\client\\src\\pages\\Tving.tsx",["163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193"],[],"D:\\tving\\client\\src\\pages\\Details.jsx",["194","195","196","197","198","199","200","201","202","203","204"],[],"import { getDefaultNormalizer } from '@testing-library/react';\r\nimport React, { Component, useEffect, useState, useCallback } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { getDetailTv } from 'services/tv';\r\nimport { getDetailMovie } from 'services/movie';\r\nimport styles from 'styled/Details.module.css';\r\nimport CheckBox from 'components/CheckBox';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\nimport Favorate from 'components/Favorate';\r\nimport { loadingState, favorateState } from '../atoms';\r\nimport {\r\n  useRecoilState,\r\n  useRecoilValue,\r\n  useSetRecoilState,\r\n  useResetRecoilState,\r\n} from 'recoil';\r\nimport Img from 'components/Img';\r\nimport { css } from '@emotion/react';\r\nimport { useMemo } from 'react';\r\n\r\nexport default function Details() {\r\n  const override = css`\r\n    display: block;\r\n    margin: 0 auto;\r\n    border-color: red;\r\n    background-color: blue !important;\r\n  `;\r\n  let [color, setColor] = useState('#ffffff');\r\n  const dontShow = [\r\n    'budget',\r\n    'id',\r\n    'imdb_id',\r\n    'video',\r\n    'vote_average',\r\n    'vote_count',\r\n  ];\r\n  const getDetail = async () => {\r\n    let res;\r\n    if (type === 'movie') {\r\n      res = await getDetailMovie(id);\r\n    } else if (type === 'tv') {\r\n      res = await getDetailTv(id);\r\n    }\r\n    setResponse(res);\r\n  };\r\n  const [response, setResponse] = useState();\r\n  const [loading, setLoading] = useRecoilState(loadingState);\r\n  const [favorate, setFavorate] = useRecoilState(favorateState);\r\n  useEffect(() => {\r\n    getDetail();\r\n    setLoading(false);\r\n  }, [loading]);\r\n  const currentFavorateState = useMemo(() => {\r\n    // favorate.includes();\r\n  });\r\n  // useEffect(() => {\r\n  //   if (favorate) setFavorate({ id, type });\r\n  // }, [favorate]);\r\n  const { type, id } = useParams();\r\n  const a = () => {\r\n    console.log(favorate);\r\n    setFavorate({ id, type });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <ClipLoader color={color} css={override} size={150} />\r\n      ) : (\r\n        <div className={styles.detail_wrap}>\r\n          <Favorate onClick={(id, type) => a}></Favorate>\r\n          <ul>\r\n            {response\r\n              ? Object.entries(response).map(([key, value]) => (\r\n                  <li>\r\n                    <b style={{ fontSize: '24px' }}>{key}</b>\r\n                    {key === 'adult' ? (\r\n                      <CheckBox value={value}></CheckBox>\r\n                    ) : key === 'backdrop_path' ? (\r\n                      <Img src={value} />\r\n                    ) : value && !dontShow.includes(value) ? (\r\n                      JSON.stringify(value)\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </li>\r\n                ))\r\n              : null}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","D:\\tving\\client\\src\\layout\\Layout.tsx",["205","206","207","208","209","210","211","212","213","214","215","216","217"],[],"import React, { useRef, forwardRef, useState, useEffect } from 'react';\r\n\r\nimport Stone from 'components/Stone';\r\nimport styled from 'styled/Layout.module.css';\r\nimport Header from 'layout/Header';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\nimport { css } from '@emotion/react';\r\nimport {\r\n  useRecoilState,\r\n  useRecoilValue,\r\n  useSetRecoilState,\r\n  useResetRecoilState,\r\n} from 'recoil';\r\nimport {\r\n  modalFlagState,\r\n  countState,\r\n  userIdState,\r\n  offsetState,\r\n  loadingState,\r\n  headerState,\r\n} from '../atoms';\r\nimport {\r\n  Outlet,\r\n  useNavigate,\r\n  useLocation,\r\n  useOutletContext,\r\n} from 'react-router-dom';\r\n\r\n// import AppStateProvider from 'providers/AppStateProvider';\r\nexport default function Layout() {\r\n  const param = useLocation();\r\n  // const currentCount = useRecoilValue(countState); // 읽기 전용!\r\n  const headerRef = useRef(null);\r\n\r\n  const loading = useRecoilValue(loadingState);\r\n\r\n  const override = css`\r\n    border-color: red;\r\n    background-color: blue !important;\r\n    display: block;\r\n    z-index: 1;\r\n  `;\r\n  let [color, setColor] = useState('#ffffff');\r\n  const [offset, setOffset] = useRecoilState(offsetState);\r\n\r\n  useEffect(() => {\r\n    console.log(param, '파람즈');\r\n  }, []);\r\n  const locateView = (type: string) => {\r\n    setOffset({ ...offset, selectedOffset: type });\r\n    if (param.pathname !== '/main/tving') {\r\n      location('/main/tving');\r\n    }\r\n  };\r\n  const [headerS, setHeaderS] = useRecoilState(headerState);\r\n  const location = useNavigate();\r\n  useEffect(() => {\r\n    if (param.pathname !== '/main/tving') {\r\n      location('/');\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (headerRef) setHeaderS(headerRef.current);\r\n  }, [headerRef]);\r\n  // {!sessionStorage.getItem('userInfo') ? (\r\n  //   <>\r\n  //     <Route path=\"/\" exact to=\"/\" element={<Start />}></Route>\r\n  //     <Route\r\n  //       path=\"*\"\r\n  //       to=\"/\"\r\n  //       element={<Navigate replace to=\"/\" />}\r\n  //     ></Route>\r\n  //   </>\r\n  // ) : (\r\n  return (\r\n    <>\r\n      <Header locateView={locateView} ref={headerRef}></Header>\r\n      {/* <div className={styled.wrap}> */}\r\n      {loading ? (\r\n        <div\r\n          className={styled.loading_wrap}\r\n          style={loading ? { overflow: 'hidden' } : {}}\r\n        >\r\n          <div className={styled.loading}>\r\n            <ClipLoader color={color} css={override} size={150} />\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      <Outlet />\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n}\r\n","D:\\tving\\client\\src\\layout\\Header.tsx",["218","219","220","221","222","223","224","225"],[],"import React, { forwardRef } from 'react';\r\nimport Stone from 'components/Stone';\r\nimport styled from 'styled/Header.module.css';\r\nimport {\r\n  useRecoilState,\r\n  useRecoilValue,\r\n  useSetRecoilState,\r\n  useResetRecoilState,\r\n} from 'recoil';\r\nimport { modalFlagState, countState, userIdState } from '../atoms';\r\nimport BaseInput from 'components/BaseInput';\r\nconst Header = forwardRef((props: any, ref: any) => {\r\n  const SearchImg = <div>서취</div>;\r\n  return (\r\n    <div className={styled.header_wrap} ref={ref}>\r\n      <ul>\r\n        <li>\r\n          <h1>Tving</h1>\r\n        </li>\r\n        <li onClick={() => props.locateView('movie')}>영화</li>\r\n        <li onClick={() => props.locateView('tv')}>Tv</li>\r\n        <li>저장리스트</li>\r\n        <li>{useRecoilValue(userIdState)} 님 환영합니다.</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Header;\r\n","D:\\tving\\client\\src\\services\\account.js",[],[],"D:\\tving\\client\\src\\services\\movie.js",[],[],"D:\\tving\\client\\src\\services\\tv.js",[],[],"D:\\tving\\client\\src\\services\\search.js",[],[],"D:\\tving\\client\\src\\components\\ColorButton.tsx",["226"],[],"import React, { useEffect } from 'react';\r\nimport { ColorButtonStyle } from 'styled/style';\r\n\r\nexport default function ColorButton(props: any) {\r\n  return <ColorButtonStyle {...props}>{props.children}</ColorButtonStyle>;\r\n}\r\n","D:\\tving\\client\\src\\components\\Modal.tsx",["227","228","229","230","231","232","233"],[],"import React, { useEffect, useState, useMemo } from 'react';\r\nimport styled from 'styled/Modal.module.css';\r\nimport ColorButton from './ColorButton';\r\nimport {\r\n  RecoilRoot,\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n} from 'recoil';\r\nimport { modalFlagState } from '../atoms';\r\nimport Portal from 'utill/Portal';\r\nimport { useNavigate } from 'react-router';\r\ntype ModalProps = {\r\n  message?: string | number | null;\r\n  warnMsg: string | number | null;\r\n  children?: string | number | null;\r\n  button: buttonType[];\r\n};\r\ntype buttonType = {\r\n  color: string | null;\r\n  backgroundColor: string | null;\r\n  func?: Function;\r\n  text: string | null;\r\n};\r\nexport default function Modal({\r\n  message,\r\n  warnMsg,\r\n  children,\r\n  button,\r\n}: ModalProps) {\r\n  const [modalMsg, setModalMsg] = useState<string | number | null>(null);\r\n  useEffect(() => {\r\n    warnMsg ? setModalMsg(warnMsg) : setModalMsg(message as string);\r\n  }, [warnMsg]);\r\n  const [modalFlag, setModalFlagState] = useRecoilState(modalFlagState);\r\n\r\n  const closeModal = () => {\r\n    setModalFlagState(false);\r\n  };\r\n  return (\r\n    <Portal>\r\n      {modalFlag ? (\r\n        <div className={styled.modal_wrap} onClick={closeModal}>\r\n          <div className={styled.modal}>\r\n            {children ? <div>{children}</div> : <div>{modalMsg}</div>}\r\n            <div className={styled.btn_wrap}>\r\n              {button.map((buttonItem: buttonType, index: number) => {\r\n                return (\r\n                  <ColorButton\r\n                    key={index}\r\n                    color={buttonItem.color}\r\n                    backgroundColor={buttonItem.backgroundColor}\r\n                    onClick={() => {\r\n                      return buttonItem.func ? buttonItem.func : null;\r\n                    }}\r\n                  >\r\n                    {buttonItem.text}\r\n                  </ColorButton>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </Portal>\r\n  );\r\n}\r\n","D:\\tving\\client\\src\\components\\BaseInput.tsx",["234"],[],"import { forwardRef, useRef } from 'react';\r\nconst BaseInput = forwardRef(\r\n  (props: { [key: string]: any }, ref: React.Ref<HTMLInputElement>) => {\r\n    return (\r\n      <>\r\n        <input {...props} ref={ref} />\r\n        {props.label ? <label htmlFor={props.id}></label> : null}\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default BaseInput;\r\n","D:\\tving\\client\\src\\components\\Img.tsx",["235","236","237","238","239","240","241","242","243","244","245","246","247"],[],"import React, { useEffect, useState, useRef, useMemo, forwardRef } from 'react';\r\n// import styled from 'styled/Modal.module.css';\r\nimport {\r\n  RecoilRoot,\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n  useSetRecoilState,\r\n  useResetRecoilState,\r\n} from 'recoil';\r\nimport styled from 'styled/Img.module.css';\r\nimport { loadingState, headerState } from '../atoms';\r\n\r\nexport default function Img(props: any) {\r\n  const [loading, setLoading] = useState(true);\r\n  const imgRef = useRef();\r\n  const onLoad = () => {\r\n    //   // alert();\r\n    // setLoading(false);\r\n    // console.log('load');\r\n  };\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    console.log('useEffect');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (imgRef.current) setLoading(false);\r\n    console.log('img');\r\n  }, [imgRef.current]);\r\n  return (\r\n    <span className={styled.img_wrap}>\r\n      {loading ? <span className={styled.loading}>로딩중</span> : null}\r\n      {!props.isapiresponse ? (\r\n        <img\r\n          ref={imgRef}\r\n          {...props}\r\n          src={`${process.env.REACT_APP_IMG_URL}${props.src}`}\r\n          alt={props.alt}\r\n        />\r\n      ) : (\r\n        <img ref={imgRef} {...props} alt={props.alt} />\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n","D:\\tving\\client\\src\\components\\CheckBox.jsx",["248"],[],"import React, { useEffect } from 'react';\r\nimport { CheckBoxStyle } from 'styled/style';\r\n\r\nexport default function CheckBox(props) {\r\n  return <CheckBoxStyle {...props} type=\"checkbox\"></CheckBoxStyle>;\r\n}\r\n","D:\\tving\\client\\src\\components\\Search.jsx",["249","250","251","252","253","254","255","256","257","258"],[],"import React, {\r\n  Component,\r\n  useEffect,\r\n  useState,\r\n  useMemo,\r\n  useCallback,\r\n  useRef,\r\n} from 'react';\r\nimport styled from 'styled/Search.module.css';\r\n\r\nimport { loadingState } from '../atoms';\r\nimport {\r\n  useRecoilState,\r\n  useRecoilValue,\r\n  useSetRecoilState,\r\n  useResetRecoilState,\r\n} from 'recoil';\r\nimport BaseInput from 'components/BaseInput';\r\nexport default function Search({ searchType, searchEvent }) {\r\n  const [searchKeyword, setSetkeword] = useState('');\r\n  const [searchWidth, setSearchWidth] = useState(0);\r\n  const setWidth = () => {\r\n    searchWidth !== 0 ? setSearchWidth(0) : setSearchWidth('150px');\r\n  };\r\n\r\n  return (\r\n    <div className={styled.search_img}>\r\n      <div onClick={setWidth}>\r\n        <img\r\n          src={require('../assets/images/search.svg').default}\r\n          alt=\"search\"\r\n        />\r\n      </div>\r\n      <BaseInput\r\n        style={{ width: searchWidth }}\r\n        value={searchKeyword}\r\n        className={styled.search_input}\r\n        onInput={event => setSetkeword(event.target.value)}\r\n        onKeyPress={searchEvent}\r\n      ></BaseInput>\r\n    </div>\r\n  );\r\n}\r\n","D:\\tving\\client\\src\\components\\Carousel.tsx",["259","260","261","262","263","264","265","266","267"],[],"import React, { useEffect, useState, useMemo, forwardRef, useRef } from 'react';\r\nimport styled from 'styled/Carousel.module.css';\r\nimport {\r\n  RecoilRoot,\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n} from 'recoil';\r\nimport Img from 'components/Img';\r\nimport { unknownObj } from 'types';\r\nexport default function Carousel({\r\n  list,\r\n  width = '500px',\r\n  height = '300px',\r\n  setList,\r\n  setLoading,\r\n}: {\r\n  list: any;\r\n  width?: any;\r\n  height?: any;\r\n  setList?: any;\r\n  setLoading?: any;\r\n}) {\r\n  const screen = useRef(null);\r\n  const film = useRef<HTMLUListElement>(null);\r\n  const scene = useRef([]);\r\n  const addScene = (el: any) => {\r\n    if (el) (scene.current as any[]).push(el);\r\n  };\r\n  const prev = () => {\r\n    (film.current as HTMLElement).style.transition = 'all 0.5s ease';\r\n    let indexV;\r\n\r\n    if (((-1 * 100) / list.length) * (index - 1) >= 10) {\r\n      indexV = index;\r\n    } else {\r\n      indexV = index - 1;\r\n    }\r\n\r\n    (film.current as HTMLElement).style.transform = `translateX(${\r\n      ((-1 * 100) / list.length) * indexV\r\n    }%)`;\r\n    setIndex(indexV);\r\n  };\r\n  const next = () => {\r\n    (film.current as HTMLElement).style.transition = 'all 0.5s ease';\r\n    let indexV;\r\n    if (((-1 * 100) / list.length) * (index + 1) <= -95) {\r\n      indexV = index;\r\n    } else {\r\n      indexV = index + 1;\r\n    }\r\n\r\n    (film.current as HTMLElement).style.transform = `translateX(${\r\n      ((-1 * 100) / list.length) * indexV\r\n    }%)`;\r\n    setIndex(indexV);\r\n  };\r\n  const [index, setIndex] = useState(0);\r\n  const [firstFlag, setFirstFlag] = useState(true);\r\n  useEffect(() => {\r\n    if (firstFlag && list.length) {\r\n      let listV = list;\r\n      const ele = listV.pop();\r\n      listV.unshift(ele);\r\n      setList(listV);\r\n      setFirstFlag(false);\r\n\r\n      (film.current as HTMLElement).style.marginLeft = `-${index * 100}%`;\r\n    }\r\n  }, [list]);\r\n  useEffect(() => {\r\n    (film.current as HTMLElement).style.transform = `translateX(${\r\n      ((-1 * 100) / list.length) * index\r\n    }%)`;\r\n  }, [index]);\r\n  const goIndex = (idx: number) => {\r\n    setIndex(idx);\r\n  };\r\n  return (\r\n    <div className={styled.screen} style={{ width, height }} ref={screen}>\r\n      <ul\r\n        className={styled.film}\r\n        ref={film}\r\n        style={{ width: 100 * list.length + '%' }}\r\n      >\r\n        {list.length > 0\r\n          ? list.map((e: any, index: any) => (\r\n              <li\r\n                ref={element => addScene(element)}\r\n                key={e.backdrop_path}\r\n                className={styled.scene}\r\n                style={{ width: (screen.current! as HTMLElement).clientWidth }}\r\n              >\r\n                <Img\r\n                  className={styled.img}\r\n                  src={e.backdrop_path}\r\n                  alt={`list_${index}`}\r\n                />\r\n              </li>\r\n            ))\r\n          : null}\r\n      </ul>\r\n      <div className={styled.btn_wrap}>\r\n        <button className={styled.prev} onClick={prev}>\r\n          이전\r\n        </button>\r\n        <button className={styled.next} onClick={next}>\r\n          다음\r\n        </button>\r\n      </div>\r\n      <ul className={styled.index_wrap}>\r\n        {list.length > 0\r\n          ? list.map((e: unknownObj, index: number) => (\r\n              <li onClick={() => goIndex(index)} key={index}>\r\n                {index}\r\n              </li>\r\n            ))\r\n          : null}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","D:\\tving\\client\\src\\components\\Favorate.jsx",["268","269","270","271","272","273"],[],"import React, { useEffect, useState, useMemo } from 'react';\r\nimport styled from 'styled/Favorate.module.css';\r\nimport Img from 'components/Img';\r\nimport {\r\n  RecoilRoot,\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n} from 'recoil';\r\n\r\nexport default function Favorate(props) {\r\n  const [active, setActive] = useState(false);\r\n  const activeFlag = useMemo(() => active, [active]);\r\n  return (\r\n    <>\r\n      {activeFlag}\r\n      <span\r\n        className={styled.img}\r\n        onMouseEnter={() => setActive(true)}\r\n        onMouseLeave={() => setActive(false)}\r\n      >\r\n        <Img\r\n          className={styled.favorate_img}\r\n          {...props}\r\n          isapiresponse={+true}\r\n          src={\r\n            !props.favorate && !activeFlag\r\n              ? require('assets/images/favorite.svg').default\r\n              : require('assets/images/favorite-active.svg').default\r\n          }\r\n        />\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n","D:\\tving\\client\\src\\atoms\\index.ts",["274","275"],[],"import { atom, selector, useRecoilState, useRecoilValue } from 'recoil';\r\n\r\nexport const modalFlagState = atom({\r\n  key: 'modalFlag',\r\n  default: false,\r\n});\r\nexport const countState = atom({\r\n  key: 'counter',\r\n  default: 0,\r\n});\r\n\r\nexport const userIdState = atom({\r\n  key: 'userId',\r\n  default: null,\r\n});\r\n\r\nexport const currentTargetState = atom({\r\n  key: 'currentTarget',\r\n  default: null,\r\n});\r\n\r\nexport const favorateState = atom({\r\n  key: 'favorate',\r\n  default: JSON.parse(JSON.stringify(localStorage.getItem('favorate') ?? [])),\r\n});\r\n\r\n//TODO: 수정필요\r\nexport const favorateSelector = selector({\r\n  key: 'favorateSelector',\r\n\r\n  get: ({ get }) => {\r\n    return get(JSON.parse(JSON.stringify(favorateState)));\r\n  },\r\n  set: ({ set }, newValue: any) => {\r\n    localStorage.setItem('favorate', newValue);\r\n    set(favorateState, newValue); // input atom 수정\r\n  },\r\n});\r\n\r\nexport const loadingState = atom({\r\n  key: 'loading',\r\n  default: true,\r\n});\r\nexport const headerState = atom({\r\n  key: 'header',\r\n  default: null,\r\n});\r\n\r\nexport const currentTargetSelector = selector({\r\n  key: 'currentTargetSelector',\r\n\r\n  get: ({ get }) => {\r\n    const currentTarget = get(currentTargetState);\r\n\r\n    return ` ${currentTarget}.`;\r\n  },\r\n});\r\n\r\nexport const countStateSelector = selector({\r\n  key: 'CountState2',\r\n\r\n  get: ({ get }) => {\r\n    const count = get(countState);\r\n\r\n    return ` 현재 카운트는 ${count}입니다.`;\r\n  },\r\n});\r\n\r\nexport const useInfo = atom({\r\n  key: 'id',\r\n  default: null,\r\n});\r\nexport const offsetState = atom<any>({\r\n  key: 'offset',\r\n  default: { movie: 0, tv: 0, selectedOffset: null },\r\n});\r\n","D:\\tving\\client\\src\\styled\\style.tsx",[],[],"D:\\tving\\client\\src\\utill\\Portal.jsx",[],[],"D:\\tving\\client\\src\\utill\\axios.ts",["276"],[],{"ruleId":"277","severity":1,"message":"278","line":1,"column":17,"nodeType":"279","messageId":"280","endLine":1,"endColumn":26},{"ruleId":"277","severity":1,"message":"281","line":8,"column":10,"nodeType":"279","messageId":"280","endLine":8,"endColumn":21},{"ruleId":"277","severity":1,"message":"282","line":10,"column":10,"nodeType":"279","messageId":"280","endLine":10,"endColumn":24},{"ruleId":"277","severity":1,"message":"283","line":10,"column":26,"nodeType":"279","messageId":"280","endLine":10,"endColumn":36},{"ruleId":"277","severity":1,"message":"284","line":10,"column":38,"nodeType":"279","messageId":"280","endLine":10,"endColumn":49},{"ruleId":"277","severity":1,"message":"285","line":10,"column":51,"nodeType":"279","messageId":"280","endLine":10,"endColumn":62},{"ruleId":"277","severity":1,"message":"286","line":13,"column":3,"nodeType":"279","messageId":"280","endLine":13,"endColumn":17},{"ruleId":"277","severity":1,"message":"287","line":14,"column":3,"nodeType":"279","messageId":"280","endLine":14,"endColumn":17},{"ruleId":"277","severity":1,"message":"288","line":15,"column":3,"nodeType":"279","messageId":"280","endLine":15,"endColumn":20},{"ruleId":"277","severity":1,"message":"289","line":16,"column":3,"nodeType":"279","messageId":"280","endLine":16,"endColumn":22},{"ruleId":"277","severity":1,"message":"290","line":13,"column":10,"nodeType":"279","messageId":"280","endLine":13,"endColumn":19},{"ruleId":"277","severity":1,"message":"291","line":18,"column":10,"nodeType":"279","messageId":"280","endLine":18,"endColumn":16},{"ruleId":"277","severity":1,"message":"292","line":18,"column":18,"nodeType":"279","messageId":"280","endLine":18,"endColumn":27},{"ruleId":"277","severity":1,"message":"293","line":61,"column":9,"nodeType":"279","messageId":"280","endLine":61,"endColumn":16},{"ruleId":"294","severity":1,"message":"295","line":66,"column":6,"nodeType":"296","endLine":66,"endColumn":10,"suggestions":"297"},{"ruleId":"277","severity":1,"message":"298","line":67,"column":9,"nodeType":"279","messageId":"280","endLine":67,"endColumn":22},{"ruleId":"294","severity":1,"message":"299","line":76,"column":6,"nodeType":"296","endLine":76,"endColumn":16,"suggestions":"300"},{"ruleId":"277","severity":1,"message":"301","line":80,"column":12,"nodeType":"279","messageId":"280","endLine":80,"endColumn":15},{"ruleId":"294","severity":1,"message":"302","line":90,"column":6,"nodeType":"296","endLine":90,"endColumn":20,"suggestions":"303"},{"ruleId":"304","severity":1,"message":"305","line":1,"column":17,"nodeType":"279","messageId":"280","endLine":1,"endColumn":26},{"ruleId":"304","severity":1,"message":"278","line":1,"column":28,"nodeType":"279","messageId":"280","endLine":1,"endColumn":37},{"ruleId":"304","severity":1,"message":"306","line":1,"column":39,"nodeType":"279","messageId":"280","endLine":1,"endColumn":47},{"ruleId":"304","severity":1,"message":"307","line":1,"column":49,"nodeType":"279","messageId":"280","endLine":1,"endColumn":60},{"ruleId":"304","severity":1,"message":"281","line":2,"column":10,"nodeType":"279","messageId":"280","endLine":2,"endColumn":21},{"ruleId":"277","severity":1,"message":"305","line":2,"column":3,"nodeType":"279","messageId":"280","endLine":2,"endColumn":12},{"ruleId":"277","severity":1,"message":"308","line":8,"column":3,"nodeType":"279","messageId":"280","endLine":8,"endColumn":13},{"ruleId":"277","severity":1,"message":"281","line":10,"column":16,"nodeType":"279","messageId":"280","endLine":10,"endColumn":27},{"ruleId":"277","severity":1,"message":"288","line":17,"column":3,"nodeType":"279","messageId":"280","endLine":17,"endColumn":20},{"ruleId":"277","severity":1,"message":"289","line":18,"column":3,"nodeType":"279","messageId":"280","endLine":18,"endColumn":22},{"ruleId":"277","severity":1,"message":"283","line":20,"column":26,"nodeType":"279","messageId":"280","endLine":20,"endColumn":36},{"ruleId":"277","severity":1,"message":"309","line":25,"column":8,"nodeType":"279","messageId":"280","endLine":25,"endColumn":18},{"ruleId":"277","severity":1,"message":"310","line":32,"column":22,"nodeType":"279","messageId":"280","endLine":32,"endColumn":35},{"ruleId":"277","severity":1,"message":"311","line":39,"column":9,"nodeType":"279","messageId":"280","endLine":39,"endColumn":17},{"ruleId":"277","severity":1,"message":"290","line":47,"column":10,"nodeType":"279","messageId":"280","endLine":47,"endColumn":19},{"ruleId":"277","severity":1,"message":"312","line":49,"column":8,"nodeType":"279","messageId":"280","endLine":49,"endColumn":13},{"ruleId":"277","severity":1,"message":"313","line":49,"column":15,"nodeType":"279","messageId":"280","endLine":49,"endColumn":23},{"ruleId":"277","severity":1,"message":"314","line":53,"column":22,"nodeType":"279","messageId":"280","endLine":53,"endColumn":35},{"ruleId":"277","severity":1,"message":"315","line":62,"column":9,"nodeType":"279","messageId":"280","endLine":62,"endColumn":10},{"ruleId":"294","severity":1,"message":"316","line":78,"column":6,"nodeType":"296","endLine":78,"endColumn":22,"suggestions":"317"},{"ruleId":"294","severity":1,"message":"318","line":92,"column":6,"nodeType":"296","endLine":92,"endColumn":17,"suggestions":"319"},{"ruleId":"294","severity":1,"message":"320","line":120,"column":6,"nodeType":"296","endLine":120,"endColumn":15,"suggestions":"321"},{"ruleId":"322","severity":1,"message":"323","line":153,"column":56,"nodeType":"279","messageId":"324","endLine":153,"endColumn":57},{"ruleId":"294","severity":1,"message":"325","line":162,"column":5,"nodeType":"296","endLine":162,"endColumn":21,"suggestions":"326"},{"ruleId":"277","severity":1,"message":"327","line":164,"column":22,"nodeType":"279","messageId":"280","endLine":164,"endColumn":35},{"ruleId":"277","severity":1,"message":"328","line":169,"column":10,"nodeType":"279","messageId":"280","endLine":169,"endColumn":20},{"ruleId":"294","severity":1,"message":"329","line":201,"column":6,"nodeType":"296","endLine":201,"endColumn":8,"suggestions":"330"},{"ruleId":"294","severity":1,"message":"331","line":210,"column":6,"nodeType":"296","endLine":210,"endColumn":8,"suggestions":"332"},{"ruleId":"294","severity":1,"message":"333","line":213,"column":6,"nodeType":"296","endLine":213,"endColumn":31,"suggestions":"334"},{"ruleId":"277","severity":1,"message":"335","line":214,"column":10,"nodeType":"279","messageId":"280","endLine":214,"endColumn":23},{"ruleId":"277","severity":1,"message":"336","line":215,"column":10,"nodeType":"279","messageId":"280","endLine":215,"endColumn":21},{"ruleId":"294","severity":1,"message":"337","line":224,"column":6,"nodeType":"296","endLine":224,"endColumn":41,"suggestions":"338"},{"ruleId":"294","severity":1,"message":"339","line":245,"column":6,"nodeType":"296","endLine":245,"endColumn":25,"suggestions":"340"},{"ruleId":"294","severity":1,"message":"341","line":265,"column":6,"nodeType":"296","endLine":265,"endColumn":22,"suggestions":"342"},{"ruleId":"294","severity":1,"message":"343","line":274,"column":6,"nodeType":"296","endLine":274,"endColumn":29,"suggestions":"344"},{"ruleId":"294","severity":1,"message":"345","line":323,"column":5,"nodeType":"296","endLine":323,"endColumn":50,"suggestions":"346"},{"ruleId":"304","severity":1,"message":"347","line":1,"column":10,"nodeType":"279","messageId":"280","endLine":1,"endColumn":30},{"ruleId":"304","severity":1,"message":"305","line":2,"column":17,"nodeType":"279","messageId":"280","endLine":2,"endColumn":26},{"ruleId":"304","severity":1,"message":"307","line":2,"column":49,"nodeType":"279","messageId":"280","endLine":2,"endColumn":60},{"ruleId":"304","severity":1,"message":"281","line":3,"column":10,"nodeType":"279","messageId":"280","endLine":3,"endColumn":21},{"ruleId":"304","severity":1,"message":"287","line":13,"column":3,"nodeType":"279","messageId":"280","endLine":13,"endColumn":17},{"ruleId":"304","severity":1,"message":"288","line":14,"column":3,"nodeType":"279","messageId":"280","endLine":14,"endColumn":20},{"ruleId":"304","severity":1,"message":"289","line":15,"column":3,"nodeType":"279","messageId":"280","endLine":15,"endColumn":22},{"ruleId":"304","severity":1,"message":"313","line":28,"column":15,"nodeType":"279","messageId":"280","endLine":28,"endColumn":23},{"ruleId":"294","severity":1,"message":"348","line":52,"column":6,"nodeType":"296","endLine":52,"endColumn":15,"suggestions":"349"},{"ruleId":"304","severity":1,"message":"350","line":53,"column":9,"nodeType":"279","messageId":"280","endLine":53,"endColumn":29},{"ruleId":"294","severity":1,"message":"351","line":53,"column":32,"nodeType":"279","endLine":53,"endColumn":39},{"ruleId":"277","severity":1,"message":"352","line":1,"column":25,"nodeType":"279","messageId":"280","endLine":1,"endColumn":35},{"ruleId":"277","severity":1,"message":"353","line":3,"column":8,"nodeType":"279","messageId":"280","endLine":3,"endColumn":13},{"ruleId":"277","severity":1,"message":"288","line":11,"column":3,"nodeType":"279","messageId":"280","endLine":11,"endColumn":20},{"ruleId":"277","severity":1,"message":"289","line":12,"column":3,"nodeType":"279","messageId":"280","endLine":12,"endColumn":22},{"ruleId":"277","severity":1,"message":"282","line":15,"column":3,"nodeType":"279","messageId":"280","endLine":15,"endColumn":17},{"ruleId":"277","severity":1,"message":"283","line":16,"column":3,"nodeType":"279","messageId":"280","endLine":16,"endColumn":13},{"ruleId":"277","severity":1,"message":"284","line":17,"column":3,"nodeType":"279","messageId":"280","endLine":17,"endColumn":14},{"ruleId":"277","severity":1,"message":"354","line":26,"column":3,"nodeType":"279","messageId":"280","endLine":26,"endColumn":19},{"ruleId":"277","severity":1,"message":"313","line":43,"column":15,"nodeType":"279","messageId":"280","endLine":43,"endColumn":23},{"ruleId":"294","severity":1,"message":"355","line":48,"column":6,"nodeType":"296","endLine":48,"endColumn":8,"suggestions":"356"},{"ruleId":"277","severity":1,"message":"357","line":55,"column":10,"nodeType":"279","messageId":"280","endLine":55,"endColumn":17},{"ruleId":"294","severity":1,"message":"358","line":61,"column":6,"nodeType":"296","endLine":61,"endColumn":8,"suggestions":"359"},{"ruleId":"294","severity":1,"message":"360","line":64,"column":6,"nodeType":"296","endLine":64,"endColumn":17,"suggestions":"361"},{"ruleId":"277","severity":1,"message":"353","line":2,"column":8,"nodeType":"279","messageId":"280","endLine":2,"endColumn":13},{"ruleId":"277","severity":1,"message":"286","line":5,"column":3,"nodeType":"279","messageId":"280","endLine":5,"endColumn":17},{"ruleId":"277","severity":1,"message":"288","line":7,"column":3,"nodeType":"279","messageId":"280","endLine":7,"endColumn":20},{"ruleId":"277","severity":1,"message":"289","line":8,"column":3,"nodeType":"279","messageId":"280","endLine":8,"endColumn":22},{"ruleId":"277","severity":1,"message":"282","line":10,"column":10,"nodeType":"279","messageId":"280","endLine":10,"endColumn":24},{"ruleId":"277","severity":1,"message":"283","line":10,"column":26,"nodeType":"279","messageId":"280","endLine":10,"endColumn":36},{"ruleId":"277","severity":1,"message":"362","line":11,"column":8,"nodeType":"279","messageId":"280","endLine":11,"endColumn":17},{"ruleId":"277","severity":1,"message":"363","line":13,"column":9,"nodeType":"279","messageId":"280","endLine":13,"endColumn":18},{"ruleId":"277","severity":1,"message":"278","line":1,"column":17,"nodeType":"279","messageId":"280","endLine":1,"endColumn":26},{"ruleId":"277","severity":1,"message":"364","line":1,"column":38,"nodeType":"279","messageId":"280","endLine":1,"endColumn":45},{"ruleId":"277","severity":1,"message":"365","line":5,"column":3,"nodeType":"279","messageId":"280","endLine":5,"endColumn":13},{"ruleId":"277","severity":1,"message":"366","line":6,"column":3,"nodeType":"279","messageId":"280","endLine":6,"endColumn":7},{"ruleId":"277","severity":1,"message":"367","line":7,"column":3,"nodeType":"279","messageId":"280","endLine":7,"endColumn":11},{"ruleId":"277","severity":1,"message":"287","line":9,"column":3,"nodeType":"279","messageId":"280","endLine":9,"endColumn":17},{"ruleId":"277","severity":1,"message":"281","line":13,"column":10,"nodeType":"279","messageId":"280","endLine":13,"endColumn":21},{"ruleId":"294","severity":1,"message":"368","line":35,"column":6,"nodeType":"296","endLine":35,"endColumn":15,"suggestions":"369"},{"ruleId":"277","severity":1,"message":"370","line":1,"column":22,"nodeType":"279","messageId":"280","endLine":1,"endColumn":28},{"ruleId":"277","severity":1,"message":"364","line":1,"column":46,"nodeType":"279","messageId":"280","endLine":1,"endColumn":53},{"ruleId":"277","severity":1,"message":"352","line":1,"column":55,"nodeType":"279","messageId":"280","endLine":1,"endColumn":65},{"ruleId":"277","severity":1,"message":"365","line":4,"column":3,"nodeType":"279","messageId":"280","endLine":4,"endColumn":13},{"ruleId":"277","severity":1,"message":"366","line":5,"column":3,"nodeType":"279","messageId":"280","endLine":5,"endColumn":7},{"ruleId":"277","severity":1,"message":"367","line":6,"column":3,"nodeType":"279","messageId":"280","endLine":6,"endColumn":11},{"ruleId":"277","severity":1,"message":"286","line":7,"column":3,"nodeType":"279","messageId":"280","endLine":7,"endColumn":17},{"ruleId":"277","severity":1,"message":"287","line":8,"column":3,"nodeType":"279","messageId":"280","endLine":8,"endColumn":17},{"ruleId":"277","severity":1,"message":"288","line":9,"column":3,"nodeType":"279","messageId":"280","endLine":9,"endColumn":20},{"ruleId":"277","severity":1,"message":"289","line":10,"column":3,"nodeType":"279","messageId":"280","endLine":10,"endColumn":22},{"ruleId":"277","severity":1,"message":"371","line":13,"column":10,"nodeType":"279","messageId":"280","endLine":13,"endColumn":22},{"ruleId":"277","severity":1,"message":"285","line":13,"column":24,"nodeType":"279","messageId":"280","endLine":13,"endColumn":35},{"ruleId":"277","severity":1,"message":"372","line":18,"column":9,"nodeType":"279","messageId":"280","endLine":18,"endColumn":15},{"ruleId":"294","severity":1,"message":"373","line":31,"column":6,"nodeType":"296","endLine":31,"endColumn":22,"suggestions":"374"},{"ruleId":"304","severity":1,"message":"278","line":1,"column":17,"nodeType":"279","messageId":"280","endLine":1,"endColumn":26},{"ruleId":"304","severity":1,"message":"305","line":2,"column":3,"nodeType":"279","messageId":"280","endLine":2,"endColumn":12},{"ruleId":"304","severity":1,"message":"278","line":3,"column":3,"nodeType":"279","messageId":"280","endLine":3,"endColumn":12},{"ruleId":"304","severity":1,"message":"364","line":5,"column":3,"nodeType":"279","messageId":"280","endLine":5,"endColumn":10},{"ruleId":"304","severity":1,"message":"307","line":6,"column":3,"nodeType":"279","messageId":"280","endLine":6,"endColumn":14},{"ruleId":"304","severity":1,"message":"370","line":7,"column":3,"nodeType":"279","messageId":"280","endLine":7,"endColumn":9},{"ruleId":"304","severity":1,"message":"371","line":11,"column":10,"nodeType":"279","messageId":"280","endLine":11,"endColumn":22},{"ruleId":"304","severity":1,"message":"286","line":13,"column":3,"nodeType":"279","messageId":"280","endLine":13,"endColumn":17},{"ruleId":"304","severity":1,"message":"287","line":14,"column":3,"nodeType":"279","messageId":"280","endLine":14,"endColumn":17},{"ruleId":"304","severity":1,"message":"288","line":15,"column":3,"nodeType":"279","messageId":"280","endLine":15,"endColumn":20},{"ruleId":"304","severity":1,"message":"289","line":16,"column":3,"nodeType":"279","messageId":"280","endLine":16,"endColumn":22},{"ruleId":"277","severity":1,"message":"364","line":1,"column":38,"nodeType":"279","messageId":"280","endLine":1,"endColumn":45},{"ruleId":"277","severity":1,"message":"352","line":1,"column":47,"nodeType":"279","messageId":"280","endLine":1,"endColumn":57},{"ruleId":"277","severity":1,"message":"365","line":4,"column":3,"nodeType":"279","messageId":"280","endLine":4,"endColumn":13},{"ruleId":"277","severity":1,"message":"366","line":5,"column":3,"nodeType":"279","messageId":"280","endLine":5,"endColumn":7},{"ruleId":"277","severity":1,"message":"367","line":6,"column":3,"nodeType":"279","messageId":"280","endLine":6,"endColumn":11},{"ruleId":"277","severity":1,"message":"286","line":7,"column":3,"nodeType":"279","messageId":"280","endLine":7,"endColumn":17},{"ruleId":"277","severity":1,"message":"287","line":8,"column":3,"nodeType":"279","messageId":"280","endLine":8,"endColumn":17},{"ruleId":"294","severity":1,"message":"375","line":72,"column":6,"nodeType":"296","endLine":72,"endColumn":12,"suggestions":"376"},{"ruleId":"294","severity":1,"message":"377","line":77,"column":6,"nodeType":"296","endLine":77,"endColumn":13,"suggestions":"378"},{"ruleId":"304","severity":1,"message":"278","line":1,"column":17,"nodeType":"279","messageId":"280","endLine":1,"endColumn":26},{"ruleId":"304","severity":1,"message":"365","line":5,"column":3,"nodeType":"279","messageId":"280","endLine":5,"endColumn":13},{"ruleId":"304","severity":1,"message":"366","line":6,"column":3,"nodeType":"279","messageId":"280","endLine":6,"endColumn":7},{"ruleId":"304","severity":1,"message":"367","line":7,"column":3,"nodeType":"279","messageId":"280","endLine":7,"endColumn":11},{"ruleId":"304","severity":1,"message":"286","line":8,"column":3,"nodeType":"279","messageId":"280","endLine":8,"endColumn":17},{"ruleId":"304","severity":1,"message":"287","line":9,"column":3,"nodeType":"279","messageId":"280","endLine":9,"endColumn":17},{"ruleId":"277","severity":1,"message":"286","line":1,"column":26,"nodeType":"279","messageId":"280","endLine":1,"endColumn":40},{"ruleId":"277","severity":1,"message":"287","line":1,"column":42,"nodeType":"279","messageId":"280","endLine":1,"endColumn":56},{"ruleId":"277","severity":1,"message":"379","line":3,"column":10,"nodeType":"279","messageId":"280","endLine":3,"endColumn":20},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'modalFlagState' is defined but never used.","'countState' is defined but never used.","'userIdState' is defined but never used.","'headerState' is defined but never used.","'useRecoilState' is defined but never used.","'useRecoilValue' is defined but never used.","'useSetRecoilState' is defined but never used.","'useResetRecoilState' is defined but never used.","'modalFlag' is assigned a value but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'checkId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'idReg' and 'warnMsgConfig'. Either include them or remove the dependency array. You can also do a functional update 'setWarnMsgConfig(w => ...)' if you only need 'warnMsgConfig' in the 'setWarnMsgConfig' call.","ArrayExpression",["380"],"'checkPassword' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'passwordReg' and 'warnMsgConfig'. Either include them or remove the dependency array. You can also do a functional update 'setWarnMsgConfig(w => ...)' if you only need 'warnMsgConfig' in the 'setWarnMsgConfig' call.",["381"],"'key' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'warnMsgConfig'. Either include it or remove the dependency array.",["382"],"no-unused-vars","'Component' is defined but never used.","'useState' is defined but never used.","'useCallback' is defined but never used.","'useContext' is defined but never used.","'ClipLoader' is defined but never used.","'AxiosResponse' is defined but never used.","'override' is assigned a value but never used.","'color' is assigned a value but never used.","'setColor' is assigned a value but never used.","'setSearchType' is assigned a value but never used.","'a' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.",["383"],"React Hook useEffect has missing dependencies: 'offset' and 'setOffset'. Either include them or remove the dependency array.",["384"],"React Hook useEffect has missing dependencies: 'areaName', 'header', 'movieOffset', and 'tvOffset'. Either include them or remove the dependency array.",["385"],"no-self-assign","'i' is assigned to itself.","selfAssignment","React Hook useCallback has missing dependencies: 'placedArea', 'scroll', and 'wrapArray'. Either include them or remove the dependency array.",["386"],"'setPlacedArea' is assigned a value but never used.","'pageOffset' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'setLoading'. Either include it or remove the dependency array.",["387"],"React Hook useEffect has missing dependencies: 'fetchList' and 'offset'. Either include them or remove the dependency array.",["388"],"React Hook useEffect has a missing dependency: 'completeImgLoaded'. Either include it or remove the dependency array.",["389"],"'slideMoveList' is assigned a value but never used.","'slideTvList' is assigned a value but never used.","React Hook useEffect has unnecessary dependencies: 'movieWrap.current' and 'tvWrap.current'. Either exclude them or remove the dependency array. Mutable values like 'tvWrap.current' aren't valid dependencies because mutating them doesn't re-render the component.",["390"],"React Hook useEffect has a missing dependency: 'offset'. Either include it or remove the dependency array. Mutable values like 'movieWrap.current' aren't valid dependencies because mutating them doesn't re-render the component.",["391"],"React Hook useEffect has a missing dependency: 'offset'. Either include it or remove the dependency array. Mutable values like 'tvWrap.current' aren't valid dependencies because mutating them doesn't re-render the component.",["392"],"React Hook useEffect has a missing dependency: 'setIndex'. Either include it or remove the dependency array.",["393"],"React Hook useCallback has missing dependencies: 'placedArea.position', 'setLoading', 'setModalFlagState', and 'wrapArray'. Either include them or remove the dependency array. Mutable values like 'tvWrap.current' aren't valid dependencies because mutating them doesn't re-render the component.",["394"],"'getDefaultNormalizer' is defined but never used.","React Hook useEffect has missing dependencies: 'getDetail' and 'setLoading'. Either include them or remove the dependency array.",["395"],"'currentFavorateState' is assigned a value but never used.","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'forwardRef' is defined but never used.","'Stone' is defined but never used.","'useOutletContext' is defined but never used.","React Hook useEffect has a missing dependency: 'param'. Either include it or remove the dependency array.",["396"],"'headerS' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location' and 'param.pathname'. Either include them or remove the dependency array.",["397"],"React Hook useEffect has a missing dependency: 'setHeaderS'. Either include it or remove the dependency array.",["398"],"'BaseInput' is defined but never used.","'SearchImg' is assigned a value but never used.","'useMemo' is defined but never used.","'RecoilRoot' is defined but never used.","'atom' is defined but never used.","'selector' is defined but never used.","React Hook useEffect has a missing dependency: 'message'. Either include it or remove the dependency array. If 'setModalMsg' needs the current value of 'message', you can also switch to useReducer instead of useState and read 'message' in the reducer.",["399"],"'useRef' is defined but never used.","'loadingState' is defined but never used.","'onLoad' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'imgRef.current'. Either exclude it or remove the dependency array. Mutable values like 'imgRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["400"],"React Hook useEffect has missing dependencies: 'firstFlag', 'index', and 'setList'. Either include them or remove the dependency array. If 'setList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["401"],"React Hook useEffect has a missing dependency: 'list.length'. Either include it or remove the dependency array.",["402"],"'unknownObj' is defined but never used.",{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"425","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"423","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},"Update the dependencies array to be: [id, idReg, warnMsgConfig]",{"range":"447","text":"448"},"Update the dependencies array to be: [password, passwordReg, warnMsgConfig]",{"range":"449","text":"450"},"Update the dependencies array to be: [id, password, warnMsgConfig]",{"range":"451","text":"452"},"Update the dependencies array to be: [handleScroll, wrapArrayIndex]",{"range":"453","text":"454"},"Update the dependencies array to be: [offset, setOffset, wrapArray]",{"range":"455","text":"456"},"Update the dependencies array to be: [areaName, header, movieOffset, scrollY, tvOffset]",{"range":"457","text":"458"},"Update the dependencies array to be: [placedArea, scroll, wrapArray]",{"range":"459","text":"460"},"Update the dependencies array to be: [setLoading]",{"range":"461","text":"462"},"Update the dependencies array to be: [fetchList, offset]",{"range":"463","text":"464"},"Update the dependencies array to be: [topTvList, topMovieList, completeImgLoaded]",{"range":"465","text":"466"},"Update the dependencies array to be: []",{"range":"467","text":"468"},"Update the dependencies array to be: [offset]",{"range":"469","text":"470"},{"range":"471","text":"470"},"Update the dependencies array to be: [offset.selectedOffset, setIndex]",{"range":"472","text":"473"},"Update the dependencies array to be: [areaName, wrapArray, setLoading, placedArea.position, setModalFlagState]",{"range":"474","text":"475"},"Update the dependencies array to be: [getDetail, loading, setLoading]",{"range":"476","text":"477"},"Update the dependencies array to be: [param]",{"range":"478","text":"479"},"Update the dependencies array to be: [location, param.pathname]",{"range":"480","text":"481"},"Update the dependencies array to be: [headerRef, setHeaderS]",{"range":"482","text":"483"},"Update the dependencies array to be: [message, warnMsg]",{"range":"484","text":"485"},{"range":"486","text":"468"},"Update the dependencies array to be: [firstFlag, index, list, setList]",{"range":"487","text":"488"},"Update the dependencies array to be: [index, list.length]",{"range":"489","text":"490"},[2313,2317],"[id, idReg, warnMsgConfig]",[2558,2568],"[password, passwordReg, warnMsgConfig]",[2975,2989],"[id, password, warnMsgConfig]",[2848,2864],"[handleScroll, wrapArrayIndex]",[3327,3338],"[offset, setOffset, wrapArray]",[3945,3954],"[areaName, header, movieOffset, scrollY, tvOffset]",[5396,5412],"[placedArea, scroll, wrapArray]",[6526,6528],"[setLoading]",[6744,6746],"[fetchList, offset]",[6802,6827],"[topTvList, topMovieList, completeImgLoaded]",[7250,7285],"[]",[7812,7831],"[offset]",[8339,8355],[8598,8621],"[offset.selectedOffset, setIndex]",[10109,10154],"[areaName, wrapArray, setLoading, placedArea.position, setModalFlagState]",[1578,1587],"[getDetail, loading, setLoading]",[1221,1223],"[param]",[1609,1611],"[location, param.pathname]",[1692,1703],"[headerRef, setHeaderS]",[939,948],"[message, warnMsg]",[796,812],[1887,1893],"[firstFlag, index, list, setList]",[2044,2051],"[index, list.length]"]