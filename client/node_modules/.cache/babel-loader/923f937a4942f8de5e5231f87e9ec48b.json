{"ast":null,"code":"var _jsxFileName = \"D:\\\\tving\\\\client\\\\src\\\\pages\\\\Tving.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo, useCallback, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled/Tving.module.css';\nimport { Element, animateScroll } from 'react-scroll';\nimport { loadingState, headerState } from '../atoms';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { modalFlagState, offsetState, userIdState } from '../atoms';\nimport { getTopMovie } from 'services/movie';\nimport { getTopTv } from 'services/tv';\nimport { getSearchMedia } from 'services/search';\nimport { css } from '@emotion/react';\nimport Carousel from 'components/Carousel';\nimport Search from 'components/Search';\nimport Modal from 'components/Modal';\nimport Img from 'components/Img';\nimport { useOutletContext } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tving() {\n  _s();\n\n  const locatedView = useOutletContext();\n  useEffect(() => {\n    //TODO:\n    alert(locatedView + 'TVIE');\n  }, [locatedView]);\n  const override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n    background-color: blue !important;\n  `;\n  const scroll = animateScroll;\n  const [modalFlag, setModalFlagState] = useRecoilState(modalFlagState);\n  const [offset, setOffset] = useRecoilState(offsetState);\n  let [color, setColor] = useState('#ffffff'); //movie리스트와 tv리스트를 담아줄 useState\n\n  const [topMovieList, setTopMovieList] = useState([]);\n  const [topTvList, setTopTvList] = useState([]);\n  const [searchType, setSearchType] = useState('movie');\n  const [movieOffset, setMovieOffset] = useState(0);\n  const [tvOffset, setTvOffset] = useState(0);\n  const [scrollY, setScrollY] = useState(0);\n  const [loading, setLoading] = useRecoilState(loadingState);\n  const movieWrap = useRef(null);\n  const tvWrap = useRef(null);\n  const [wrapArrayIndex, setWrapArrayIndex] = useState(0);\n  const h = useRecoilValue(headerState);\n  const a = useRecoilValue(userIdState);\n  const header = useMemo(() => {\n    return h ? {\n      current: h\n    } : {\n      current: null\n    };\n  }, [h]);\n\n  const handleScroll = event => {\n    event.preventDefault();\n    setIndex(event.key, wrapArrayIndex);\n    setPageOffset(window.scrollY);\n  };\n\n  useEffect(() => {\n    setWrapArrayIndex(wrapArrayIndex);\n\n    if (tvWrap.current && movieWrap.current) {\n      window.addEventListener('keyup', handleScroll);\n    }\n\n    return () => window.removeEventListener('keyup', handleScroll);\n  }, [wrapArrayIndex]); //상단 header와 movieList의 area, tvList의 area (ref)\n\n  const wrapArray = useMemo(() => {\n    var _tvWrap$current;\n\n    setTvOffset((_tvWrap$current = tvWrap.current) === null || _tvWrap$current === void 0 ? void 0 : _tvWrap$current.offsetTop);\n    return [header, movieWrap, tvWrap];\n  }, [header, movieWrap, tvWrap]);\n  useEffect(() => {\n    var _current, _current2;\n\n    console.log(wrapArray);\n    setOffset({ ...offset,\n      movie: (_current = wrapArray[1].current) === null || _current === void 0 ? void 0 : _current.offsetTop,\n      tv: (_current2 = wrapArray[2].current) === null || _current2 === void 0 ? void 0 : _current2.offsetTop\n    });\n  }, [wrapArray]);\n  const [areaName, setAreaName] = useState('header');\n  useEffect(() => {\n    var _current3, _current4;\n\n    let v;\n\n    if (scrollY >= 0 && scrollY < ((_current3 = header.current) === null || _current3 === void 0 ? void 0 : _current3.clientHeight) || !scrollY) {\n      v = 'header';\n    } else if (scrollY >= ((_current4 = header.current) === null || _current4 === void 0 ? void 0 : _current4.clientHeight) && scrollY < movieOffset) {\n      v = 'movie';\n    } else if (scrollY >= movieOffset) {\n      v = 'tv';\n    }\n\n    console.log('화이팅', header, movieOffset, tvOffset, v, areaName);\n    setAreaName(v);\n  }, [scrollY]);\n  const setIndex = useCallback((type, index, isHeaderE) => {\n    let i = index;\n    placedArea.move = false;\n\n    if (isHeaderE) {\n      var _current5, _current6;\n\n      setWrapArrayIndex(index);\n      return scroll.scrollTo((_current5 = wrapArray[i].current) === null || _current5 === void 0 ? void 0 : _current5.offsetTop, {\n        top: (_current6 = wrapArray[i].current) === null || _current6 === void 0 ? void 0 : _current6.offsetTop,\n        duration: 1000\n      });\n    }\n\n    if (type === 'ArrowUp') {\n      var _current7, _current8, _current9;\n\n      if (i === 0) {\n        setWrapArrayIndex(0);\n        alert();\n        return scroll.scrollTo(0, {\n          top: 0,\n          duration: 300\n        });\n      }\n\n      i - 1 <= 0 ? i = 0 : i = i - 1;\n      scroll.scrollTo((_current7 = wrapArray[i].current) === null || _current7 === void 0 ? void 0 : _current7.offsetTop, {\n        top: (_current8 = wrapArray[i].current) === null || _current8 === void 0 ? void 0 : _current8.offsetTop,\n        duration: 1000\n      });\n      setScrollY((_current9 = wrapArray[i].current) === null || _current9 === void 0 ? void 0 : _current9.offsetTop);\n      return setWrapArrayIndex(i);\n    } else if (type === 'ArrowDown') {\n      var _current10, _current11, _current12;\n\n      i + 1 <= wrapArray.length ? i = i + 1 : i = i;\n      scroll.scrollTo((_current10 = wrapArray[i].current) === null || _current10 === void 0 ? void 0 : _current10.offsetTop, {\n        top: (_current11 = wrapArray[i].current) === null || _current11 === void 0 ? void 0 : _current11.offsetTop,\n        duration: 1000\n      });\n      setScrollY((_current12 = wrapArray[i].current) === null || _current12 === void 0 ? void 0 : _current12.offsetTop);\n      return setWrapArrayIndex(i);\n    }\n  }, [wrapArrayIndex]);\n  const [placedArea, setPlacedArea] = useState({\n    position: 0,\n    areaName: 'header',\n    move: false\n  });\n  const [pageOffset, setPageOffset] = useState(0);\n  const fetchList = useCallback(async () => {\n    window.scrollTo({\n      top: 0\n    });\n\n    try {\n      setLoading(true);\n      const [responseMovieList, responseTvList] = await Promise.all([getTopMovie(), getTopTv()]);\n      responseTvList.results.length > 0 ? setTopTvList(responseTvList.results.map(e => {\n        e.complete = false;\n        return e;\n      })) : setTopTvList([null]);\n      responseMovieList.results.length > 0 ? setTopMovieList(responseMovieList.results.map(e => {\n        e.complete = false;\n        return e;\n      })) : setTopMovieList([null]);\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setWrapArrayIndex(0);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    const setList = async () => {\n      await fetchList();\n      window.scrollTo({\n        top: offset[offset.selectedOffset]\n      });\n    };\n\n    setList();\n  }, []);\n  useEffect(() => {\n    completeImgLoaded();\n  }, [topTvList, topMovieList]);\n  const [slideMoveList, slideSetMovieList] = useState([]);\n  const [slideTvList, slideSetTvList] = useState([]);\n  useEffect(() => {\n    console.log(tvWrap, movieWrap, 200); // setWrapArrayIndex(wrapArrayIndex);\n    // if (tvWrap.current && movieWrap.current) {\n    //   window.addEventListener('keyup', handleScroll);\n    // }\n    // return () => window.removeEventListener('keyup', handleScroll);\n  }, [tvWrap.current, movieWrap.current]);\n  useEffect(() => {\n    var _movieWrap$current3;\n\n    if (movieWrap && movieWrap.current) {\n      var _movieWrap$current, _movieWrap$current2;\n\n      console.log(movieWrap.current, 'movieWrap', (_movieWrap$current = movieWrap.current) === null || _movieWrap$current === void 0 ? void 0 : _movieWrap$current.offsetTop);\n      movieWrap.current.style.height = window.screen.availHeight + 'px';\n      setMovieOffset((_movieWrap$current2 = movieWrap.current) === null || _movieWrap$current2 === void 0 ? void 0 : _movieWrap$current2.offsetTop);\n    }\n\n    console.log(offset, movieWrap.current, (_movieWrap$current3 = movieWrap.current) === null || _movieWrap$current3 === void 0 ? void 0 : _movieWrap$current3.offsetTop, '섹스m');\n  }, [movieWrap.current]);\n  useEffect(() => {\n    if (tvWrap && tvWrap.current) {\n      var _tvWrap$current2, _tvWrap$current3, _tvWrap$current4;\n\n      console.log(tvWrap.current, 'tvWrap', (_tvWrap$current2 = tvWrap.current) === null || _tvWrap$current2 === void 0 ? void 0 : _tvWrap$current2.offsetTop);\n      setTvOffset((_tvWrap$current3 = tvWrap.current) === null || _tvWrap$current3 === void 0 ? void 0 : _tvWrap$current3.offsetTop);\n      console.log(offset, tvWrap.current, (_tvWrap$current4 = tvWrap.current) === null || _tvWrap$current4 === void 0 ? void 0 : _tvWrap$current4.offsetTop, '섹스2');\n      tvWrap.current.style.height = window.screen.availHeight + 'px';\n    }\n  }, [tvWrap.current]);\n  useEffect(() => {\n    let i = 0;\n\n    if (offset.selectedOffset === 'movie') {\n      i = 1;\n    } else if (offset.selectedOffset === 'tv') {\n      i = 2;\n    }\n\n    setIndex(offset.selectedOffset, i, 'headerEvent');\n  }, [offset.selectedOffset]);\n  const [warnMsg, setWarnMsg] = useState(null);\n  const searchEvent = useCallback(async e => {\n    let areaN = areaName;\n\n    if (areaName === 'header') {\n      areaN = 'movie';\n    }\n\n    if (e.key === 'Enter') {\n      try {\n        console.log(wrapArray + 'enter');\n        setLoading(true);\n        const res = await getSearchMedia(areaN, e.target.value);\n\n        if (!res.results.length) {\n          setWarnMsg('검색결과가 없다');\n          setLoading(false);\n          return setModalFlagState(true);\n        }\n\n        if (areaN === 'tv') {\n          res.results.length > 0 ? setTopTvList(res.results.map(e => {\n            e.complete = false;\n            return e;\n          })) : setTopTvList([null]);\n        } else if (areaN === 'movie') {\n          res.results.length > 0 ? setTopMovieList(res.results.map(e => {\n            e.complete = false;\n            return e;\n          })) : setTopMovieList([null]);\n        }\n\n        setLoading(false);\n        console.log(placedArea.position);\n      } catch (e) {\n        setLoading(false);\n        console.log(e);\n      }\n    }\n  }, [tvWrap.current, movieWrap.current, areaName]);\n  useEffect(() => {// if (localStorage.getItem('offset')) {\n    //   window.scrollTo({\n    //     top: pageOffset,\n    //   });\n    // }\n  }, [loading]);\n  useEffect(() => {\n    console.log(movieOffset, tvOffset, '스파이더');\n  }, [movieOffset, tvOffset]); // const computedMovieImgLoaded = useMemo(() => {\n  //   return topMovieList.map((e:unknownObj)=> e.complete === true);\n  // }, [topMovieList.map((e:unknownObj)=> e.complete)]);\n  // const computedTvImgLoaded = useMemo(() => {\n  //   return topTvList.map((e:unknownObj)=> e.complete === true);\n  // }, [topTvList]);\n\n  const completeImgLoaded = () => {\n    //   console.log(\n    //     topMovieList.every(e => e.complete),\n    //     topTvList.every(e => e.complete),\n    //     computedMovieImgLoaded,\n    //     computedTvImgLoaded,\n    //     '컨솔'\n    //   );\n    if (topMovieList.length > 0 && topMovieList[0] !== null && topTvList.length > 0 && topTvList[0] !== null && topMovieList.every(e => e.complete) && topTvList.every(e => e.complete)) {\n      setLoading(false);\n    } else {\n      setLoading(true);\n    }\n  };\n\n  const handleComplete = (list, i, t) => {\n    if (list[0] !== null) {\n      list[i].complete = true;\n      completeImgLoaded();\n    } // completeImgLoaded();\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styled.content_wrap,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100px',\n        height: '50px',\n        position: 'fixed'\n      },\n      children: [areaName + '에러이알 넴임', JSON.stringify(offset) + '지']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      warnMsg: warnMsg,\n      button: [{\n        text: '확인',\n        backgroundColor: 'blue',\n        color: '#fff',\n        func: () => setLoading(false)\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        searchType: searchType,\n        searchEvent: searchEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Element, {\n        name: \"movieWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: movieWrap,\n          className: styled.content,\n          children: [/*#__PURE__*/_jsxDEV(Carousel, {\n            setLoading: setLoading,\n            setList: slideSetMovieList,\n            list: topMovieList[0] !== null ? topMovieList.slice(0, 5) : []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styled.post_wrap,\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              children: topMovieList.length > 0 && topMovieList[0] !== null ? topMovieList.slice(0, Math.abs(topMovieList.length / 2)).map((e, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: e.backdrop_path ? styled.post : styled.empty_img,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/main/movie/${e.id}`,\n                  children: /*#__PURE__*/_jsxDEV(Img, {\n                    src: e.backdrop_path,\n                    onLoad: () => handleComplete(topMovieList, i, 'load'),\n                    onError: () => {\n                      handleComplete(topMovieList, i, 'load');\n                    } // onError={handleComplete(topMovieList, i)}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 27\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 25\n              }, this)) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: topMovieList.length > 0 && topMovieList[0] !== null ? topMovieList.slice(Math.abs(topMovieList.length / 2)).map((e, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: e.backdrop_path ? styled.post : styled.empty_img,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/main/movie/${e.id}`,\n                  children: /*#__PURE__*/_jsxDEV(Img, {\n                    src: e.backdrop_path,\n                    onLoad: () => handleComplete(topMovieList, i + Math.abs(topMovieList.length / 2), 'load'),\n                    onError: () => handleComplete(topMovieList, i + Math.abs(topMovieList.length / 2), 'load') // onError={handleComplete(\n                    //   topMovieList,\n                    //   i + Math.abs(topMovieList.length / 2)\n                    // )}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 27\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 25\n              }, this)) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Element, {\n        name: \"tvWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: tvWrap,\n          className: styled.content,\n          children: [/*#__PURE__*/_jsxDEV(Carousel, {\n            setLoading: setLoading,\n            setList: slideSetTvList,\n            list: topTvList[0] !== null ? topTvList.slice(0, 5) : []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styled.post_wrap,\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              children: topTvList.length > 0 && topTvList[0] !== null ? topTvList.slice(0, Math.abs(topTvList.length / 2)).map((e, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: e.backdrop_path ? styled.post : styled.empty_img,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/main/tv/${e.id}`,\n                  children: /*#__PURE__*/_jsxDEV(Img, {\n                    src: e.backdrop_path,\n                    onLoad: () => handleComplete(topTvList, i, 'load'),\n                    onError: () => handleComplete(topTvList, i, 'load') // onError={handleComplete(topTvList, i)}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 27\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 25\n              }, this)) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: topTvList.length > 0 && topTvList[0] !== null ? topTvList.slice(Math.abs(topTvList.length / 2)).map((e, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: e.backdrop_path ? styled.post : styled.empty_img,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/main/tv/${e.id}`,\n                  children: /*#__PURE__*/_jsxDEV(Img, {\n                    src: e.backdrop_path,\n                    onLoad: () => handleComplete(topTvList, i + Math.abs(topTvList.length / 2), 'load'),\n                    onError: () => handleComplete(topTvList, i + Math.abs(topTvList.length / 2), 'load') // onError={handleComplete(\n                    //   topTvList,\n                    //   i + Math.abs(topTvList.length / 2)\n                    // )}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 27\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 25\n              }, this)) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tving, \"IXQX45AUEptVcnxaz2fafR2AnhA=\", false, function () {\n  return [useOutletContext, useRecoilState, useRecoilState, useRecoilState, useRecoilValue, useRecoilValue];\n});\n\n_c = Tving;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tving\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useCallback","useRef","Link","styled","Element","animateScroll","loadingState","headerState","useRecoilState","useRecoilValue","modalFlagState","offsetState","userIdState","getTopMovie","getTopTv","getSearchMedia","css","Carousel","Search","Modal","Img","useOutletContext","Tving","locatedView","alert","override","scroll","modalFlag","setModalFlagState","offset","setOffset","color","setColor","topMovieList","setTopMovieList","topTvList","setTopTvList","searchType","setSearchType","movieOffset","setMovieOffset","tvOffset","setTvOffset","scrollY","setScrollY","loading","setLoading","movieWrap","tvWrap","wrapArrayIndex","setWrapArrayIndex","h","a","header","current","handleScroll","event","preventDefault","setIndex","key","setPageOffset","window","addEventListener","removeEventListener","wrapArray","offsetTop","console","log","movie","tv","areaName","setAreaName","v","clientHeight","type","index","isHeaderE","i","placedArea","move","scrollTo","top","duration","length","setPlacedArea","position","pageOffset","fetchList","responseMovieList","responseTvList","Promise","all","results","map","e","complete","behavior","setList","selectedOffset","completeImgLoaded","slideMoveList","slideSetMovieList","slideTvList","slideSetTvList","style","height","screen","availHeight","warnMsg","setWarnMsg","searchEvent","areaN","res","target","value","every","handleComplete","list","t","content_wrap","width","JSON","stringify","text","backgroundColor","func","content","slice","post_wrap","Math","abs","backdrop_path","post","empty_img","id"],"sources":["D:/tving/client/src/pages/Tving.tsx"],"sourcesContent":["import React, {\r\n  Component,\r\n  useEffect,\r\n  useState,\r\n  useMemo,\r\n  useCallback,\r\n  useRef,\r\n  useContext,\r\n} from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport styled from 'styled/Tving.module.css';\r\nimport { Element, animateScroll } from 'react-scroll';\r\nimport { loadingState, headerState } from '../atoms';\r\nimport {\r\n  useRecoilState,\r\n  useRecoilValue,\r\n  useSetRecoilState,\r\n  useResetRecoilState,\r\n} from 'recoil';\r\nimport { modalFlagState, countState, offsetState, userIdState } from '../atoms';\r\nimport { getTopMovie } from 'services/movie';\r\nimport { getTopTv } from 'services/tv';\r\nimport { getSearchMedia } from 'services/search';\r\nimport { css } from '@emotion/react';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\nimport Carousel from 'components/Carousel';\r\nimport Search from 'components/Search';\r\n\r\nimport Modal from 'components/Modal';\r\nimport Img from 'components/Img';\r\nimport { useOutletContext } from 'react-router-dom';\r\nimport { unknownObj } from 'types/index';\r\nexport default function Tving() {\r\n  const locatedView = useOutletContext();\r\n  useEffect(() => {\r\n    //TODO:\r\n    alert(locatedView + 'TVIE');\r\n  }, [locatedView]);\r\n  const override = css`\r\n    display: block;\r\n    margin: 0 auto;\r\n    border-color: red;\r\n    background-color: blue !important;\r\n  `;\r\n  const scroll = animateScroll;\r\n\r\n  const [modalFlag, setModalFlagState] = useRecoilState(modalFlagState);\r\n  const [offset, setOffset] = useRecoilState(offsetState);\r\n  let [color, setColor] = useState('#ffffff');\r\n  //movie리스트와 tv리스트를 담아줄 useState\r\n  const [topMovieList, setTopMovieList] = useState<unknownObj[] | null[]>([]);\r\n  const [topTvList, setTopTvList] = useState<unknownObj[] | null[]>([]);\r\n  const [searchType, setSearchType] = useState<string>('movie');\r\n  const [movieOffset, setMovieOffset] = useState<number>(0);\r\n  const [tvOffset, setTvOffset] = useState<number>(0);\r\n  const [scrollY, setScrollY] = useState<number>(0);\r\n  const [loading, setLoading] = useRecoilState(loadingState);\r\n  const movieWrap = useRef(null);\r\n  const tvWrap = useRef(null);\r\n  const [wrapArrayIndex, setWrapArrayIndex] = useState<number>(0);\r\n  const h: { current: HTMLElement } | null = useRecoilValue(headerState);\r\n  const a = useRecoilValue(userIdState);\r\n  const header = useMemo<{ current: null | HTMLElement }>(() => {\r\n    return h ? { current: h } : { current: null };\r\n  }, [h]);\r\n  const handleScroll = (event: KeyboardEvent) => {\r\n    event.preventDefault();\r\n    setIndex(event.key, wrapArrayIndex);\r\n    setPageOffset(window.scrollY);\r\n  };\r\n  useEffect(() => {\r\n    setWrapArrayIndex(wrapArrayIndex);\r\n    if (tvWrap.current && movieWrap.current) {\r\n      window.addEventListener('keyup', handleScroll);\r\n    }\r\n\r\n    return () => window.removeEventListener('keyup', handleScroll);\r\n  }, [wrapArrayIndex]);\r\n\r\n  //상단 header와 movieList의 area, tvList의 area (ref)\r\n  const wrapArray = useMemo(() => {\r\n    setTvOffset((tvWrap.current! as HTMLElement)?.offsetTop);\r\n    return [header, movieWrap, tvWrap];\r\n  }, [header, movieWrap, tvWrap]);\r\n  useEffect(() => {\r\n    console.log(wrapArray);\r\n    setOffset({\r\n      ...offset,\r\n      movie: (wrapArray[1]!.current! as HTMLElement)?.offsetTop,\r\n      tv: (wrapArray[2]!.current! as HTMLElement)?.offsetTop,\r\n    });\r\n  }, [wrapArray]);\r\n  const [areaName, setAreaName] = useState('header');\r\n  useEffect(() => {\r\n    let v;\r\n    if (\r\n      (scrollY >= 0 &&\r\n        scrollY < (header!.current as HTMLElement)?.clientHeight) ||\r\n      !scrollY\r\n    ) {\r\n      v = 'header';\r\n    } else if (\r\n      scrollY >= (header!.current as HTMLElement)?.clientHeight &&\r\n      scrollY < movieOffset\r\n    ) {\r\n      v = 'movie';\r\n    } else if (scrollY >= movieOffset) {\r\n      v = 'tv';\r\n    }\r\n    console.log(\r\n      '화이팅',\r\n\r\n      header,\r\n      movieOffset,\r\n      tvOffset,\r\n      v,\r\n      areaName\r\n    );\r\n    setAreaName(v as string);\r\n  }, [scrollY]);\r\n  const setIndex = useCallback(\r\n    (type: string, index: number, isHeaderE?: string) => {\r\n      let i = index;\r\n      placedArea.move = false;\r\n\r\n      if (isHeaderE) {\r\n        setWrapArrayIndex(index);\r\n        return scroll.scrollTo(\r\n          (wrapArray[i]!.current! as HTMLElement)?.offsetTop,\r\n          {\r\n            top: (wrapArray[i]!.current! as HTMLElement)?.offsetTop,\r\n            duration: 1000,\r\n          }\r\n        );\r\n      }\r\n      if (type === 'ArrowUp') {\r\n        if (i === 0) {\r\n          setWrapArrayIndex(0);\r\n          alert();\r\n          return scroll.scrollTo(0, {\r\n            top: 0,\r\n            duration: 300,\r\n          });\r\n        }\r\n        i - 1 <= 0 ? (i = 0) : (i = i - 1);\r\n        scroll.scrollTo((wrapArray[i]!.current! as HTMLElement)?.offsetTop, {\r\n          top: (wrapArray[i]!.current! as HTMLElement)?.offsetTop,\r\n          duration: 1000,\r\n        });\r\n        setScrollY((wrapArray[i]!.current! as HTMLElement)?.offsetTop);\r\n        return setWrapArrayIndex(i);\r\n      } else if (type === 'ArrowDown') {\r\n        i + 1 <= wrapArray.length ? (i = i + 1) : (i = i);\r\n        scroll.scrollTo((wrapArray[i]!.current! as HTMLElement)?.offsetTop, {\r\n          top: (wrapArray[i]!.current! as HTMLElement)?.offsetTop,\r\n          duration: 1000,\r\n        });\r\n        setScrollY((wrapArray[i]!.current! as HTMLElement)?.offsetTop);\r\n        return setWrapArrayIndex(i);\r\n      }\r\n    },\r\n    [wrapArrayIndex]\r\n  );\r\n  const [placedArea, setPlacedArea] = useState({\r\n    position: 0,\r\n    areaName: 'header',\r\n    move: false,\r\n  });\r\n  const [pageOffset, setPageOffset] = useState(0);\r\n  const fetchList = useCallback(async () => {\r\n    window.scrollTo({ top: 0 });\r\n    try {\r\n      setLoading(true);\r\n      const [responseMovieList, responseTvList] = await Promise.all([\r\n        getTopMovie(),\r\n        getTopTv(),\r\n      ]);\r\n      responseTvList.results.length > 0\r\n        ? setTopTvList(\r\n            responseTvList.results.map((e: unknownObj) => {\r\n              e.complete = false;\r\n              return e;\r\n            })\r\n          )\r\n        : setTopTvList([null]);\r\n      responseMovieList.results.length > 0\r\n        ? setTopMovieList(\r\n            responseMovieList.results.map((e: unknownObj) => {\r\n              e.complete = false;\r\n              return e;\r\n            })\r\n          )\r\n        : setTopMovieList([null]);\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setWrapArrayIndex(0);\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    const setList = async () => {\r\n      await fetchList();\r\n      window.scrollTo({\r\n        top: offset[offset.selectedOffset as string] as number,\r\n      });\r\n    };\r\n    setList();\r\n  }, []);\r\n  useEffect(() => {\r\n    completeImgLoaded();\r\n  }, [topTvList, topMovieList]);\r\n  const [slideMoveList, slideSetMovieList] = useState([]);\r\n  const [slideTvList, slideSetTvList] = useState([]);\r\n  useEffect(() => {\r\n    console.log(tvWrap, movieWrap, 200);\r\n\r\n    // setWrapArrayIndex(wrapArrayIndex);\r\n    // if (tvWrap.current && movieWrap.current) {\r\n    //   window.addEventListener('keyup', handleScroll);\r\n    // }\r\n    // return () => window.removeEventListener('keyup', handleScroll);\r\n  }, [tvWrap.current, movieWrap.current]);\r\n\r\n  useEffect(() => {\r\n    if (movieWrap && movieWrap.current) {\r\n      console.log(\r\n        movieWrap.current,\r\n        'movieWrap',\r\n        (movieWrap.current as HTMLElement)?.offsetTop\r\n      );\r\n\r\n      (movieWrap.current as HTMLElement).style.height =\r\n        window.screen.availHeight + 'px';\r\n\r\n      setMovieOffset((movieWrap.current! as HTMLElement)?.offsetTop);\r\n    }\r\n    console.log(\r\n      offset,\r\n      movieWrap.current,\r\n      (movieWrap.current! as HTMLElement)?.offsetTop,\r\n      '섹스m'\r\n    );\r\n  }, [movieWrap.current]);\r\n\r\n  useEffect(() => {\r\n    if (tvWrap && tvWrap.current) {\r\n      console.log(\r\n        tvWrap.current,\r\n        'tvWrap',\r\n        (tvWrap.current! as HTMLElement)?.offsetTop\r\n      );\r\n\r\n      setTvOffset((tvWrap.current! as HTMLElement)?.offsetTop);\r\n      console.log(\r\n        offset,\r\n        tvWrap.current,\r\n        (tvWrap.current! as HTMLElement)?.offsetTop,\r\n        '섹스2'\r\n      );\r\n      (tvWrap.current as HTMLElement).style.height =\r\n        window.screen.availHeight + 'px';\r\n    }\r\n  }, [tvWrap.current]);\r\n  useEffect(() => {\r\n    let i = 0;\r\n    if (offset.selectedOffset === 'movie') {\r\n      i = 1;\r\n    } else if (offset.selectedOffset === 'tv') {\r\n      i = 2;\r\n    }\r\n    setIndex(offset.selectedOffset, i as number, 'headerEvent');\r\n  }, [offset.selectedOffset]);\r\n  const [warnMsg, setWarnMsg] = useState<string | null>(null);\r\n  const searchEvent = useCallback(\r\n    async (e: KeyboardEvent) => {\r\n      let areaN = areaName;\r\n      if (areaName === 'header') {\r\n        areaN = 'movie';\r\n      }\r\n\r\n      if (e.key === 'Enter') {\r\n        try {\r\n          console.log(wrapArray + 'enter');\r\n          setLoading(true);\r\n          const res = await getSearchMedia(\r\n            areaN,\r\n            (e.target as HTMLInputElement).value\r\n          );\r\n          if (!res.results.length) {\r\n            setWarnMsg('검색결과가 없다');\r\n            setLoading(false);\r\n            return setModalFlagState(true);\r\n          }\r\n          if (areaN === 'tv') {\r\n            res.results.length > 0\r\n              ? setTopTvList(\r\n                  res.results.map((e: unknownObj) => {\r\n                    e.complete = false;\r\n                    return e;\r\n                  })\r\n                )\r\n              : setTopTvList([null]);\r\n          } else if (areaN === 'movie') {\r\n            res.results.length > 0\r\n              ? setTopMovieList(\r\n                  res.results.map((e: unknownObj) => {\r\n                    e.complete = false;\r\n                    return e;\r\n                  })\r\n                )\r\n              : setTopMovieList([null]);\r\n          }\r\n          setLoading(false);\r\n          console.log(placedArea.position);\r\n        } catch (e) {\r\n          setLoading(false);\r\n          console.log(e);\r\n        }\r\n      }\r\n    },\r\n    [tvWrap.current, movieWrap.current, areaName]\r\n  );\r\n  useEffect(() => {\r\n    // if (localStorage.getItem('offset')) {\r\n    //   window.scrollTo({\r\n    //     top: pageOffset,\r\n    //   });\r\n    // }\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    console.log(movieOffset, tvOffset, '스파이더');\r\n  }, [movieOffset, tvOffset]);\r\n  // const computedMovieImgLoaded = useMemo(() => {\r\n  //   return topMovieList.map((e:unknownObj)=> e.complete === true);\r\n  // }, [topMovieList.map((e:unknownObj)=> e.complete)]);\r\n\r\n  // const computedTvImgLoaded = useMemo(() => {\r\n  //   return topTvList.map((e:unknownObj)=> e.complete === true);\r\n  // }, [topTvList]);\r\n  const completeImgLoaded = () => {\r\n    //   console.log(\r\n    //     topMovieList.every(e => e.complete),\r\n    //     topTvList.every(e => e.complete),\r\n    //     computedMovieImgLoaded,\r\n    //     computedTvImgLoaded,\r\n    //     '컨솔'\r\n    //   );\r\n    if (\r\n      topMovieList.length > 0 &&\r\n      topMovieList[0] !== null &&\r\n      topTvList.length > 0 &&\r\n      topTvList[0] !== null &&\r\n      (topMovieList as unknownObj[]).every(e => e.complete) &&\r\n      (topTvList as unknownObj[]).every(e => e.complete)\r\n    ) {\r\n      setLoading(false);\r\n    } else {\r\n      setLoading(true);\r\n    }\r\n  };\r\n  const handleComplete = (list: unknownObj[], i: number, t: string) => {\r\n    if (list[0] !== null) {\r\n      list[i].complete = true;\r\n      completeImgLoaded();\r\n    }\r\n    // completeImgLoaded();\r\n  };\r\n\r\n  return (\r\n    <div className={styled.content_wrap}>\r\n      <div style={{ width: '100px', height: '50px', position: 'fixed' }}>\r\n        {/* {topTvList.every(e => e.complete) + 'tv'} */}\r\n        {areaName + '에러이알 넴임'}\r\n        {JSON.stringify(offset) + '지'}\r\n        {/* {topMovieList.every(e => e.complete) + 'movie'} */}\r\n      </div>\r\n      <Modal\r\n        warnMsg={warnMsg}\r\n        button={[\r\n          {\r\n            text: '확인',\r\n            backgroundColor: 'blue',\r\n            color: '#fff',\r\n            func: () => setLoading(false),\r\n          },\r\n        ]}\r\n      ></Modal>\r\n\r\n      <div>\r\n        <Search searchType={searchType} searchEvent={searchEvent}></Search>\r\n        <Element name=\"movieWrap\">\r\n          <div ref={movieWrap} className={styled.content}>\r\n            <Carousel\r\n              setLoading={setLoading}\r\n              setList={slideSetMovieList}\r\n              list={topMovieList[0] !== null ? topMovieList.slice(0, 5) : []}\r\n            ></Carousel>\r\n            <div className={styled.post_wrap}>\r\n              <ul>\r\n                {topMovieList.length > 0 && topMovieList[0] !== null\r\n                  ? topMovieList\r\n                      .slice(0, Math.abs(topMovieList.length / 2))\r\n                      .map((e, i) => (\r\n                        <li\r\n                          className={\r\n                            e!.backdrop_path ? styled.post : styled.empty_img\r\n                          }\r\n                          key={i}\r\n                        >\r\n                          <Link to={`/main/movie/${e!.id}`}>\r\n                            <Img\r\n                              src={e!.backdrop_path}\r\n                              onLoad={() =>\r\n                                handleComplete(\r\n                                  topMovieList as unknownObj[],\r\n                                  i,\r\n                                  'load'\r\n                                )\r\n                              }\r\n                              onError={() => {\r\n                                handleComplete(\r\n                                  topMovieList as unknownObj[],\r\n                                  i,\r\n                                  'load'\r\n                                );\r\n                              }}\r\n                              // onError={handleComplete(topMovieList, i)}\r\n                            />\r\n                          </Link>\r\n                        </li>\r\n                      ))\r\n                  : null}\r\n              </ul>\r\n              <ul>\r\n                {topMovieList.length > 0 && topMovieList[0] !== null\r\n                  ? topMovieList\r\n                      .slice(Math.abs(topMovieList.length / 2))\r\n                      .map((e, i) => (\r\n                        <li\r\n                          className={\r\n                            e!.backdrop_path ? styled.post : styled.empty_img\r\n                          }\r\n                          key={i}\r\n                        >\r\n                          <Link to={`/main/movie/${e!.id}`}>\r\n                            <Img\r\n                              src={e!.backdrop_path}\r\n                              onLoad={() =>\r\n                                handleComplete(\r\n                                  topMovieList as unknownObj[],\r\n                                  i + Math.abs(topMovieList.length / 2),\r\n                                  'load'\r\n                                )\r\n                              }\r\n                              onError={() =>\r\n                                handleComplete(\r\n                                  topMovieList as unknownObj[],\r\n                                  i + Math.abs(topMovieList.length / 2),\r\n                                  'load'\r\n                                )\r\n                              }\r\n                              // onError={handleComplete(\r\n                              //   topMovieList,\r\n                              //   i + Math.abs(topMovieList.length / 2)\r\n                              // )}\r\n                            />\r\n                          </Link>\r\n                        </li>\r\n                      ))\r\n                  : null}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </Element>\r\n        <Element name=\"tvWrap\">\r\n          <div ref={tvWrap} className={styled.content}>\r\n            <Carousel\r\n              setLoading={setLoading}\r\n              setList={slideSetTvList}\r\n              list={topTvList[0] !== null ? topTvList.slice(0, 5) : []}\r\n            ></Carousel>\r\n            <div className={styled.post_wrap}>\r\n              <ul>\r\n                {topTvList.length > 0 && topTvList[0] !== null\r\n                  ? topTvList\r\n                      .slice(0, Math.abs(topTvList.length / 2))\r\n                      .map((e, i) => (\r\n                        <li\r\n                          className={\r\n                            e!.backdrop_path ? styled.post : styled.empty_img\r\n                          }\r\n                          key={i}\r\n                        >\r\n                          <Link to={`/main/tv/${e!.id}`}>\r\n                            <Img\r\n                              src={e!.backdrop_path}\r\n                              onLoad={() =>\r\n                                handleComplete(\r\n                                  topTvList as unknownObj[],\r\n                                  i,\r\n                                  'load'\r\n                                )\r\n                              }\r\n                              onError={() =>\r\n                                handleComplete(\r\n                                  topTvList as unknownObj[],\r\n                                  i,\r\n                                  'load'\r\n                                )\r\n                              }\r\n                              // onError={handleComplete(topTvList, i)}\r\n                            />\r\n                          </Link>\r\n                        </li>\r\n                      ))\r\n                  : null}\r\n              </ul>\r\n              <ul>\r\n                {topTvList.length > 0 && topTvList[0] !== null\r\n                  ? topTvList\r\n                      .slice(Math.abs(topTvList.length / 2))\r\n                      .map((e, i) => (\r\n                        <li\r\n                          className={\r\n                            e!.backdrop_path ? styled.post : styled.empty_img\r\n                          }\r\n                          key={i}\r\n                        >\r\n                          <Link to={`/main/tv/${e!.id}`}>\r\n                            <Img\r\n                              src={e!.backdrop_path}\r\n                              onLoad={() =>\r\n                                handleComplete(\r\n                                  topTvList as unknownObj[],\r\n                                  i + Math.abs(topTvList.length / 2),\r\n                                  'load'\r\n                                )\r\n                              }\r\n                              onError={() =>\r\n                                handleComplete(\r\n                                  topTvList as unknownObj[],\r\n                                  i + Math.abs(topTvList.length / 2),\r\n                                  'load'\r\n                                )\r\n                              }\r\n                              // onError={handleComplete(\r\n                              //   topTvList,\r\n                              //   i + Math.abs(topTvList.length / 2)\r\n                              // )}\r\n                            />\r\n                          </Link>\r\n                        </li>\r\n                      ))\r\n                  : null}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </Element>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}