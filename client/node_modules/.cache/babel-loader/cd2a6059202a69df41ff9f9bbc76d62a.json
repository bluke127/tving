{"ast":null,"code":"import styled from 'styled-components';\nexport const BodyBackground = styled.div`\n  background-color: ${props => props.background || 'transparent'};\n  width: 100%;\n  height: 100%;\n`;\nexport const stone = styled.span`\n  width: calc(100% / ${_ref => {\n  let {\n    cutting\n  } = _ref;\n  return cutting;\n}});\n  height: calc(100% / ${_ref2 => {\n  let {\n    cutting\n  } = _ref2;\n  return cutting;\n}});\n`;\nexport const AreaSpanForCenter = styled.span`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, 50%);\n  display: inline-block;\n`;\nexport const BaseButton = styled.button`\n  width: calc(100% / ${_ref3 => {\n  let {\n    num\n  } = _ref3;\n  return num ? num : 1;\n}});\n  text-align: center;\n  line-height: 50px;\n  cursor: pointer;\n`;\nexport const ColorButtonStyle = styled(BaseButton)`\n  background: ${_ref4 => {\n  let {\n    backgroundColor\n  } = _ref4;\n  return backgroundColor;\n}};\n  color: ${_ref5 => {\n  let {\n    color\n  } = _ref5;\n  return color;\n}};\n`;\nexport const CheckBoxStyle = styled.input`\n  background: ${_ref6 => {\n  let {\n    backgroundColor\n  } = _ref6;\n  return backgroundColor;\n}};\n  color: ${_ref7 => {\n  let {\n    color\n  } = _ref7;\n  return color;\n}};\n  width: ${_ref8 => {\n  let {\n    width\n  } = _ref8;\n  return width;\n}};\n  height: ${_ref9 => {\n  let {\n    height\n  } = _ref9;\n  return height;\n}};\n`;","map":{"version":3,"names":["styled","BodyBackground","div","props","background","stone","span","cutting","AreaSpanForCenter","BaseButton","button","num","ColorButtonStyle","backgroundColor","color","CheckBoxStyle","input","width","height"],"sources":["D:/tving/client/src/styled/style.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const BodyBackground = styled.div<{ background: string }>`\r\n  background-color: ${props => props.background || 'transparent'};\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const stone = styled.span<{ cutting: string }>`\r\n  width: calc(100% / ${({ cutting }) => cutting});\r\n  height: calc(100% / ${({ cutting }) => cutting});\r\n`;\r\nexport const AreaSpanForCenter = styled.span`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, 50%);\r\n  display: inline-block;\r\n`;\r\nexport const BaseButton = styled.button<{ num: number }>`\r\n  width: calc(100% / ${({ num }) => (num ? num : 1)});\r\n  text-align: center;\r\n  line-height: 50px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const ColorButtonStyle = styled(BaseButton)<{ backgroundColor: string }>`\r\n  background: ${({ backgroundColor }) => backgroundColor};\r\n  color: ${({ color }) => color};\r\n`;\r\n\r\nexport const CheckBoxStyle = styled.input<{ backgroundColor: string }>`\r\n  background: ${({ backgroundColor }) => backgroundColor};\r\n  color: ${({ color }) => color};\r\n  width: ${({ width }) => width};\r\n  height: ${({ height }) => height};\r\n`;\r\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,OAAO,MAAMC,cAAc,GAAGD,MAAM,CAACE,GAA4B;AACjE,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,UAAN,IAAoB,aAAc;AACjE;AACA;AACA,CAJO;AAMP,OAAO,MAAMC,KAAK,GAAGL,MAAM,CAACM,IAA0B;AACtD,uBAAuB;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OAAiBA,OAAjB;AAAA,CAAyB;AAChD,wBAAwB;EAAA,IAAC;IAAEA;EAAF,CAAD;EAAA,OAAiBA,OAAjB;AAAA,CAAyB;AACjD,CAHO;AAIP,OAAO,MAAMC,iBAAiB,GAAGR,MAAM,CAACM,IAAK;AAC7C;AACA;AACA;AACA;AACA;AACA,CANO;AAOP,OAAO,MAAMG,UAAU,GAAGT,MAAM,CAACU,MAAwB;AACzD,uBAAuB;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OAAcA,GAAG,GAAGA,GAAH,GAAS,CAA1B;AAAA,CAA6B;AACpD;AACA;AACA;AACA,CALO;AAOP,OAAO,MAAMC,gBAAgB,GAAGZ,MAAM,CAACS,UAAD,CAA0C;AAChF,gBAAgB;EAAA,IAAC;IAAEI;EAAF,CAAD;EAAA,OAAyBA,eAAzB;AAAA,CAAyC;AACzD,WAAW;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OAAeA,KAAf;AAAA,CAAqB;AAChC,CAHO;AAKP,OAAO,MAAMC,aAAa,GAAGf,MAAM,CAACgB,KAAmC;AACvE,gBAAgB;EAAA,IAAC;IAAEH;EAAF,CAAD;EAAA,OAAyBA,eAAzB;AAAA,CAAyC;AACzD,WAAW;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OAAeA,KAAf;AAAA,CAAqB;AAChC,WAAW;EAAA,IAAC;IAAEG;EAAF,CAAD;EAAA,OAAeA,KAAf;AAAA,CAAqB;AAChC,YAAY;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OAAgBA,MAAhB;AAAA,CAAuB;AACnC,CALO"},"metadata":{},"sourceType":"module"}