{"ast":null,"code":"var _localStorage$getItem;\n\nimport { atom, selector } from 'recoil';\nexport const modalFlagState = atom({\n  key: 'modalFlag',\n  default: false\n});\nexport const countState = atom({\n  key: 'counter',\n  default: 0\n});\nexport const userIdState = atom({\n  key: 'userId',\n  default: null\n});\nexport const currentTargetState = atom({\n  key: 'currentTarget',\n  default: null\n});\nexport const favorateState = atom({\n  key: 'favorate',\n  default: JSON.parse(JSON.stringify((_localStorage$getItem = localStorage.getItem('favorate')) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : []))\n}); //TODO: 수정필요\n\nexport const favorateSelector = selector({\n  key: 'favorateSelector',\n  get: _ref => {\n    let {\n      get\n    } = _ref;\n    return get(JSON.parse(JSON.stringify(favorateState)));\n  },\n  set: (_ref2, newValue) => {\n    let {\n      set\n    } = _ref2;\n    localStorage.setItem('favorate', newValue);\n    set(favorateState, newValue); // input atom 수정\n  }\n});\nexport const loadingState = atom({\n  key: 'loading',\n  default: true\n});\nexport const headerState = atom({\n  key: 'header',\n  default: null\n});\nexport const currentTargetSelector = selector({\n  key: 'currentTargetSelector',\n  get: _ref3 => {\n    let {\n      get\n    } = _ref3;\n    const currentTarget = get(currentTargetState);\n    return ` ${currentTarget}.`;\n  }\n});\nexport const countStateSelector = selector({\n  key: 'CountState2',\n  get: _ref4 => {\n    let {\n      get\n    } = _ref4;\n    const count = get(countState);\n    return ` 현재 카운트는 ${count}입니다.`;\n  }\n});\nexport const useInfo = atom({\n  key: 'id',\n  default: null\n});\nexport const offsetState = atom({\n  key: 'offset',\n  default: {\n    movie: 0,\n    tv: 0,\n    selectedOffset: null\n  }\n});","map":{"version":3,"names":["atom","selector","modalFlagState","key","default","countState","userIdState","currentTargetState","favorateState","JSON","parse","stringify","localStorage","getItem","favorateSelector","get","set","newValue","setItem","loadingState","headerState","currentTargetSelector","currentTarget","countStateSelector","count","useInfo","offsetState","movie","tv","selectedOffset"],"sources":["D:/tving/client/src/atoms/index.ts"],"sourcesContent":["import { atom, selector, useRecoilState, useRecoilValue } from 'recoil';\r\n\r\nexport const modalFlagState = atom({\r\n  key: 'modalFlag',\r\n  default: false,\r\n});\r\nexport const countState = atom({\r\n  key: 'counter',\r\n  default: 0,\r\n});\r\n\r\nexport const userIdState = atom({\r\n  key: 'userId',\r\n  default: null,\r\n});\r\n\r\nexport const currentTargetState = atom({\r\n  key: 'currentTarget',\r\n  default: null,\r\n});\r\n\r\nexport const favorateState = atom({\r\n  key: 'favorate',\r\n  default: JSON.parse(JSON.stringify(localStorage.getItem('favorate') ?? [])),\r\n});\r\n\r\n//TODO: 수정필요\r\nexport const favorateSelector = selector({\r\n  key: 'favorateSelector',\r\n\r\n  get: ({ get }) => {\r\n    return get(JSON.parse(JSON.stringify(favorateState)));\r\n  },\r\n  set: ({ set }, newValue: any) => {\r\n    localStorage.setItem('favorate', newValue);\r\n    set(favorateState, newValue); // input atom 수정\r\n  },\r\n});\r\n\r\nexport const loadingState = atom({\r\n  key: 'loading',\r\n  default: true,\r\n});\r\nexport const headerState = atom({\r\n  key: 'header',\r\n  default: null,\r\n});\r\n\r\nexport const currentTargetSelector = selector({\r\n  key: 'currentTargetSelector',\r\n\r\n  get: ({ get }) => {\r\n    const currentTarget = get(currentTargetState);\r\n\r\n    return ` ${currentTarget}.`;\r\n  },\r\n});\r\n\r\nexport const countStateSelector = selector({\r\n  key: 'CountState2',\r\n\r\n  get: ({ get }) => {\r\n    const count = get(countState);\r\n\r\n    return ` 현재 카운트는 ${count}입니다.`;\r\n  },\r\n});\r\n\r\nexport const useInfo = atom({\r\n  key: 'id',\r\n  default: null,\r\n});\r\nexport const offsetState = atom<any>({\r\n  key: 'offset',\r\n  default: { movie: 0, tv: 0, selectedOffset: null },\r\n});\r\n"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+D,QAA/D;AAEA,OAAO,MAAMC,cAAc,GAAGF,IAAI,CAAC;EACjCG,GAAG,EAAE,WAD4B;EAEjCC,OAAO,EAAE;AAFwB,CAAD,CAA3B;AAIP,OAAO,MAAMC,UAAU,GAAGL,IAAI,CAAC;EAC7BG,GAAG,EAAE,SADwB;EAE7BC,OAAO,EAAE;AAFoB,CAAD,CAAvB;AAKP,OAAO,MAAME,WAAW,GAAGN,IAAI,CAAC;EAC9BG,GAAG,EAAE,QADyB;EAE9BC,OAAO,EAAE;AAFqB,CAAD,CAAxB;AAKP,OAAO,MAAMG,kBAAkB,GAAGP,IAAI,CAAC;EACrCG,GAAG,EAAE,eADgC;EAErCC,OAAO,EAAE;AAF4B,CAAD,CAA/B;AAKP,OAAO,MAAMI,aAAa,GAAGR,IAAI,CAAC;EAChCG,GAAG,EAAE,UAD2B;EAEhCC,OAAO,EAAEK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,0BAAeC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf,yEAAmD,EAAnD,CAAX;AAFuB,CAAD,CAA1B,C,CAKP;;AACA,OAAO,MAAMC,gBAAgB,GAAGb,QAAQ,CAAC;EACvCE,GAAG,EAAE,kBADkC;EAGvCY,GAAG,EAAE,QAAa;IAAA,IAAZ;MAAEA;IAAF,CAAY;IAChB,OAAOA,GAAG,CAACN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,aAAf,CAAX,CAAD,CAAV;EACD,CALsC;EAMvCQ,GAAG,EAAE,QAAUC,QAAV,KAA4B;IAAA,IAA3B;MAAED;IAAF,CAA2B;IAC/BJ,YAAY,CAACM,OAAb,CAAqB,UAArB,EAAiCD,QAAjC;IACAD,GAAG,CAACR,aAAD,EAAgBS,QAAhB,CAAH,CAF+B,CAED;EAC/B;AATsC,CAAD,CAAjC;AAYP,OAAO,MAAME,YAAY,GAAGnB,IAAI,CAAC;EAC/BG,GAAG,EAAE,SAD0B;EAE/BC,OAAO,EAAE;AAFsB,CAAD,CAAzB;AAIP,OAAO,MAAMgB,WAAW,GAAGpB,IAAI,CAAC;EAC9BG,GAAG,EAAE,QADyB;EAE9BC,OAAO,EAAE;AAFqB,CAAD,CAAxB;AAKP,OAAO,MAAMiB,qBAAqB,GAAGpB,QAAQ,CAAC;EAC5CE,GAAG,EAAE,uBADuC;EAG5CY,GAAG,EAAE,SAAa;IAAA,IAAZ;MAAEA;IAAF,CAAY;IAChB,MAAMO,aAAa,GAAGP,GAAG,CAACR,kBAAD,CAAzB;IAEA,OAAQ,IAAGe,aAAc,GAAzB;EACD;AAP2C,CAAD,CAAtC;AAUP,OAAO,MAAMC,kBAAkB,GAAGtB,QAAQ,CAAC;EACzCE,GAAG,EAAE,aADoC;EAGzCY,GAAG,EAAE,SAAa;IAAA,IAAZ;MAAEA;IAAF,CAAY;IAChB,MAAMS,KAAK,GAAGT,GAAG,CAACV,UAAD,CAAjB;IAEA,OAAQ,YAAWmB,KAAM,MAAzB;EACD;AAPwC,CAAD,CAAnC;AAUP,OAAO,MAAMC,OAAO,GAAGzB,IAAI,CAAC;EAC1BG,GAAG,EAAE,IADqB;EAE1BC,OAAO,EAAE;AAFiB,CAAD,CAApB;AAIP,OAAO,MAAMsB,WAAW,GAAG1B,IAAI,CAAM;EACnCG,GAAG,EAAE,QAD8B;EAEnCC,OAAO,EAAE;IAAEuB,KAAK,EAAE,CAAT;IAAYC,EAAE,EAAE,CAAhB;IAAmBC,cAAc,EAAE;EAAnC;AAF0B,CAAN,CAAxB"},"metadata":{},"sourceType":"module"}